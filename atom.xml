<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MOOOM</title>
  
  <subtitle>生活中的那一秒</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.mooom.top/"/>
  <updated>2019-09-06T03:42:14.903Z</updated>
  <id>http://blog.mooom.top/</id>
  
  <author>
    <name>dongs365</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mariadb</title>
    <link href="http://blog.mooom.top/2019/09/06/mariadb/"/>
    <id>http://blog.mooom.top/2019/09/06/mariadb/</id>
    <published>2019-09-06T03:27:57.000Z</published>
    <updated>2019-09-06T03:42:14.903Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>MariaDB数据库管理系统是MySQL的一个分支，主要由开源社区在维护，采用GPL授权许可 MariaDB的目的是完全兼容MySQL，包括API和命令行，使之能轻松成为MySQL的代替品。</p><a id="more"></a><h2 id="MariaDB-数据库安装"><a href="#MariaDB-数据库安装" class="headerlink" title="MariaDB 数据库安装"></a>MariaDB 数据库安装</h2><h3 id="安装源"><a href="#安装源" class="headerlink" title="安装源"></a>安装源</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sS https://downloads.mariadb.com/MariaDB/mariadb_repo_setup | sudo bash</span><br></pre></td></tr></table></figure><h3 id="安装常用版本"><a href="#安装常用版本" class="headerlink" title="安装常用版本"></a>安装常用版本</h3><p>服务器 客户端 集群</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install mariadb-server galera-4 mariadb-client libmariadb3 mariadb-backup mariadb-common</span><br></pre></td></tr></table></figure><h3 id="安装【集群】"><a href="#安装【集群】" class="headerlink" title="安装【集群】"></a>安装【集群】</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install mariadb-server mariadb-client galera-4</span><br></pre></td></tr></table></figure><h3 id="安装【客户端】"><a href="#安装【客户端】" class="headerlink" title="安装【客户端】"></a>安装【客户端】</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install mariadb-client libmariadb3</span><br></pre></td></tr></table></figure><h3 id="安装特定版本"><a href="#安装特定版本" class="headerlink" title="安装特定版本"></a>安装特定版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-cache showpkg mariadb-server</span><br><span class="line">apt-get install mariadb-server = 10.3.14-1 mariadb-client = 10.3.14-1 libmariadb3 = 10.3.14-1 mariadb-backup = 10.3.14-1 mariadb-common = 10.3.14-1</span><br></pre></td></tr></table></figure><h2 id="集群部署"><a href="#集群部署" class="headerlink" title="集群部署"></a>集群部署</h2><h3 id="配置每个节点都添加上"><a href="#配置每个节点都添加上" class="headerlink" title="配置每个节点都添加上"></a>配置每个节点都添加上</h3><p>三节点演示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[galera]</span><br><span class="line">wsrep_on=ON</span><br><span class="line">wsrep_provider=/usr/lib/galera/libgalera_smm.so</span><br><span class="line">wsrep_cluster_address=&quot;gcomm://192.168.207.100,192.168.207.101.192.168.207.102&quot;</span><br><span class="line">binlog_format=row</span><br><span class="line">default_storage_engine=InnoDB</span><br><span class="line">innodb_autoinc_lock_mode=2</span><br><span class="line">bind-address=0.0.0.0</span><br><span class="line">#wsrep_slave_threads=1</span><br><span class="line">innodb_flush_log_at_trx_commit=0</span><br><span class="line">#集群名称</span><br><span class="line">wsrep_cluster_name = MyCluster</span><br><span class="line">#当前主机信息</span><br><span class="line">wsrep_node_name = T1</span><br><span class="line">wsrep_node_address = &quot;192.168.207.100&quot;</span><br></pre></td></tr></table></figure><h3 id="关闭服务"><a href="#关闭服务" class="headerlink" title="关闭服务"></a>关闭服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mariadb</span><br></pre></td></tr></table></figure><h3 id="创建集群"><a href="#创建集群" class="headerlink" title="创建集群"></a>创建集群</h3><p>T1上操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">galera_new_cluster</span><br></pre></td></tr></table></figure><h3 id="防火墙需要开启的端口"><a href="#防火墙需要开启的端口" class="headerlink" title="防火墙需要开启的端口"></a>防火墙需要开启的端口</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3306（标准MariaDB端口）</span><br><span class="line">4444（SST端口）</span><br><span class="line">4567（Galera复制端口）</span><br><span class="line">4568（IST端口）</span><br></pre></td></tr></table></figure><h3 id="apparmor配置"><a href="#apparmor配置" class="headerlink" title="apparmor配置"></a>apparmor配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/apparmor.d/disable/</span><br><span class="line">sudo ln -s /etc/apparmor.d/usr.sbin.mysqld</span><br><span class="line">sudo systemctl restart apparmor</span><br></pre></td></tr></table></figure><h3 id="检查cluster大小："><a href="#检查cluster大小：" class="headerlink" title="检查cluster大小："></a>检查cluster大小：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show status like &apos;wsrep_cluster_size&apos;;</span><br></pre></td></tr></table></figure><h3 id="检查是否已同步数据修改"><a href="#检查是否已同步数据修改" class="headerlink" title="检查是否已同步数据修改"></a>检查是否已同步数据修改</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show status like &apos;wsrep_local_state_comment&apos;;</span><br></pre></td></tr></table></figure><h3 id="查看其他Galera状态"><a href="#查看其他Galera状态" class="headerlink" title="查看其他Galera状态"></a>查看其他Galera状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show status like &apos;wsrep%&apos;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wsrep_cluster_size：集群节点数量；</span><br><span class="line">wsrep_ready：服务状态；</span><br><span class="line">wsrep_incoming_addresses：本节点域名信息。</span><br></pre></td></tr></table></figure><h3 id="清理节点"><a href="#清理节点" class="headerlink" title="清理节点"></a>清理节点</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">停止数据库服务器，删除配置，启动数据库</span><br></pre></td></tr></table></figure><h3 id="加入新节点"><a href="#加入新节点" class="headerlink" title="加入新节点"></a>加入新节点</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">停止数据库服务器，新节点配置ok-添加ip到配文件，启动数据库</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MariaDB数据库管理系统是MySQL的一个分支，主要由开源社区在维护，采用GPL授权许可 MariaDB的目的是完全兼容MySQL，包括API和命令行，使之能轻松成为MySQL的代替品。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="http://blog.mooom.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://blog.mooom.top/tags/mysql/"/>
    
      <category term="架构" scheme="http://blog.mooom.top/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>kubeadm</title>
    <link href="http://blog.mooom.top/2019/09/06/kubeadm/"/>
    <id>http://blog.mooom.top/2019/09/06/kubeadm/</id>
    <published>2019-09-06T02:20:20.000Z</published>
    <updated>2019-09-06T02:29:27.637Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>kubeadm 能帮助您建立一个小型的符合最佳实践的 Kubernetes 集群。</p><a id="more"></a><p>通过使用 kubeadm, 您的集群会符合 Kubernetes 合规性测试的要求. Kubeadm 也支持其他的集群生命周期操作，比如升级、降级和管理启动引导令牌。</p><h3 id="系统初始化配置"><a href="#系统初始化配置" class="headerlink" title="系统初始化配置"></a>系统初始化配置</h3><h4 id="关闭swap"><a href="#关闭swap" class="headerlink" title="关闭swap"></a>关闭swap</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/fstab</span><br><span class="line">注释 swap 的那一行</span><br></pre></td></tr></table></figure><h4 id="开启转发"><a href="#开启转发" class="headerlink" title="开启转发"></a>开启转发</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i &quot;s/#net.ipv4.ip_forward/net.ipv4.ip_forward/g&quot; /etc/sysctl.conf</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><h3 id="安装kubeadmin"><a href="#安装kubeadmin" class="headerlink" title="安装kubeadmin"></a>安装kubeadmin</h3><h4 id="Debian-Ubuntu-阿里云源"><a href="#Debian-Ubuntu-阿里云源" class="headerlink" title="Debian/Ubuntu 阿里云源"></a>Debian/Ubuntu 阿里云源</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get install -y apt-transport-https</span><br><span class="line">curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add -</span><br><span class="line">cat &lt;&lt;EOF &gt;/etc/apt/sources.list.d/kubernetes.list</span><br><span class="line">deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main</span><br><span class="line">EOF</span><br><span class="line">apt-get update</span><br><span class="line">apt-get install -y kubelet kubeadm kubectl</span><br></pre></td></tr></table></figure><h3 id="kubeadm命令"><a href="#kubeadm命令" class="headerlink" title="kubeadm命令"></a>kubeadm命令</h3><h4 id="查看镜像列表"><a href="#查看镜像列表" class="headerlink" title="查看镜像列表"></a>查看镜像列表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm config images list</span><br></pre></td></tr></table></figure><h4 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm config images pull</span><br></pre></td></tr></table></figure><h4 id="查看指定版本镜像"><a href="#查看指定版本镜像" class="headerlink" title="查看指定版本镜像"></a>查看指定版本镜像</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm config images list --kubernetes-version v1.15.1</span><br></pre></td></tr></table></figure><h4 id="下载指定版本镜像"><a href="#下载指定版本镜像" class="headerlink" title="下载指定版本镜像"></a>下载指定版本镜像</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm config images pull --kubernetes-version v1.15.1</span><br></pre></td></tr></table></figure><h4 id="pull镜像命令生成"><a href="#pull镜像命令生成" class="headerlink" title="pull镜像命令生成"></a>pull镜像命令生成</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm config  images list |awk  &apos;&#123;print &quot;docker pull &quot; $1 &#125;&apos;</span><br></pre></td></tr></table></figure><h4 id="tag命令生成"><a href="#tag命令生成" class="headerlink" title="tag命令生成"></a>tag命令生成</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm config  images list |awk -F&quot;/&quot; &apos;&#123;print &quot;docker tag &quot; $1&quot;/&quot;$2 &quot; registry.cn-shenzhen.aliyuncs.com/grc/&quot;$2&#125;&apos;</span><br></pre></td></tr></table></figure><h4 id="push命令生成"><a href="#push命令生成" class="headerlink" title="push命令生成"></a>push命令生成</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm config  images list |awk -F&quot;/&quot; &apos;&#123;print &quot;docker push &quot; $1&quot;/&quot;$2 &quot; registry.cn-shenzhen.aliyuncs.com/grc/&quot;$2&#125;&apos;</span><br></pre></td></tr></table></figure><h4 id="kubeadm-初始化参数"><a href="#kubeadm-初始化参数" class="headerlink" title="kubeadm 初始化参数"></a>kubeadm 初始化参数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init \</span><br><span class="line">#masterip</span><br><span class="line">--apiserver-advertise-address=10.0.52.13 \</span><br><span class="line">#镜像仓库</span><br><span class="line">--image-repository registry.aliyuncs.com/google_containers \</span><br><span class="line">#版本设置</span><br><span class="line">--kubernetes-version v1.13.3 \</span><br><span class="line">#网络设置</span><br><span class="line">--service-cidr=10.1.0.0/16 \</span><br><span class="line">#网络设置</span><br><span class="line">--pod-network-cidr=10.244.0.0/16</span><br></pre></td></tr></table></figure><h4 id="重置安装"><a href="#重置安装" class="headerlink" title="重置安装"></a>重置安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm reset</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;kubeadm 能帮助您建立一个小型的符合最佳实践的 Kubernetes 集群。&lt;/p&gt;
    
    </summary>
    
    
      <category term="集群" scheme="http://blog.mooom.top/categories/%E9%9B%86%E7%BE%A4/"/>
    
    
      <category term="k8s" scheme="http://blog.mooom.top/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes</title>
    <link href="http://blog.mooom.top/2019/09/05/kubernetes/"/>
    <id>http://blog.mooom.top/2019/09/05/kubernetes/</id>
    <published>2019-09-05T10:09:30.000Z</published>
    <updated>2019-09-06T03:25:29.018Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Kubernetes 是一个跨主机集群的 开源的容器调度平台，它可以自动化应用容器的部署、扩展和操作 , 提供以容器为中心的基础架构。</p><a id="more"></a><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>便携性: 无论公有云、私有云、混合云还是多云架构都全面支持<br>可扩展: 它是模块化、可插拔、可挂载、可组合的，支持各种形式的扩展<br>自修复: 它可以自保持应用状态、可自重启、自复制、自缩放的，通过声明式语法提供了强大的自修复能力</p><h3 id="核心组件组成"><a href="#核心组件组成" class="headerlink" title="核心组件组成"></a>核心组件组成</h3><p>etcd保存了整个集群的状态；<br>apiserver提供了资源操作的唯一入口，并提供认证、授权、访问控制、API注册和发现等机制；<br>controller manager负责维护集群的状态，比如故障检测、自动扩展、滚动更新等；<br>scheduler负责资源的调度，按照预定的调度策略将Pod调度到相应的机器上；<br>kubelet负责维护容器的生命周期，同时也负责Volume（CVI）和网络（CNI）的管理；<br>Container runtime负责镜像管理以及Pod和容器的真正运行（CRI）；<br>kube-proxy负责为Service提供cluster内部的服务发现和负载均衡；</p><h3 id="架构图示"><a href="#架构图示" class="headerlink" title="架构图示"></a>架构图示</h3><p><img src="../../../../image/kubernetes.jpg" alt="avatar"></p><h2 id="部署指南"><a href="#部署指南" class="headerlink" title="部署指南"></a>部署指南</h2><h3 id="基础系统配置"><a href="#基础系统配置" class="headerlink" title="基础系统配置"></a>基础系统配置</h3><h4 id="永久关闭swapoff"><a href="#永久关闭swapoff" class="headerlink" title="永久关闭swapoff"></a>永久关闭swapoff</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/fstab</span><br><span class="line">注释 swap 的那一行</span><br></pre></td></tr></table></figure><h4 id="永久开启ip转发"><a href="#永久开启ip转发" class="headerlink" title="永久开启ip转发"></a>永久开启ip转发</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i &quot;s/#net.ipv4.ip_forward/net.ipv4.ip_forward/g&quot; /etc/sysctl.conf</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><h3 id="安装系统软件"><a href="#安装系统软件" class="headerlink" title="安装系统软件"></a>安装系统软件</h3><h4 id="docker-安装"><a href="#docker-安装" class="headerlink" title="docker 安装"></a>docker 安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br></pre></td></tr></table></figure><h4 id="kubeadm-安装"><a href="#kubeadm-安装" class="headerlink" title="kubeadm 安装"></a>kubeadm 安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get install -y apt-transport-https</span><br><span class="line">curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add -</span><br><span class="line">cat &lt;&lt;EOF &gt;/etc/apt/sources.list.d/kubernetes.list</span><br><span class="line">deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main</span><br><span class="line">EOF</span><br><span class="line">apt-get update</span><br><span class="line">apt-get install -y kubelet kubeadm kubectl</span><br></pre></td></tr></table></figure><h3 id="PULL相关镜像"><a href="#PULL相关镜像" class="headerlink" title="PULL相关镜像"></a>PULL相关镜像</h3><h4 id="k8s镜像下载"><a href="#k8s镜像下载" class="headerlink" title="k8s镜像下载"></a>k8s镜像下载</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#获取images列表</span><br><span class="line">#基础镜像</span><br><span class="line">im1=`kubeadm config images list`</span><br><span class="line">#ui镜像</span><br><span class="line">im2=`curl -s https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml|grep image |awk &apos;&#123;print $2&#125;&apos;`</span><br><span class="line">#网络镜像</span><br><span class="line">im3=`curl -s https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml |grep image|grep amd64|uniq|awk &apos;&#123;print $2&#125;&apos;`</span><br><span class="line">ki=`echo $im1 $im2 $im3`</span><br><span class="line">#下载images镜像</span><br><span class="line">for i in $&#123;ki[*]&#125;;do docker pull $&#123;i&#125;; done</span><br><span class="line">#新的images镜像名称</span><br><span class="line">kia=(`for i in $&#123;ki[*]&#125;;do echo $i | sed &apos;s/k8s.gcr.io/registry.cn-shenzhen.aliyuncs.com\/grc/&apos;; done`)</span><br><span class="line">#修改images标签</span><br><span class="line">for ((i=0;i&lt;$&#123;#ki[@]&#125;;i++));do docker tag  $&#123;ki[i]&#125; $&#123;kia[i]&#125;;done</span><br><span class="line">#推送images</span><br><span class="line">for i in $&#123;kia[*]&#125;;do echo $i | docker push $&#123;i&#125; ; done</span><br></pre></td></tr></table></figure><h4 id="本地PULL下载"><a href="#本地PULL下载" class="headerlink" title="本地PULL下载"></a>本地PULL下载</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#获取images列表</span><br><span class="line">#基础镜像</span><br><span class="line">im1=`kubeadm config images list`</span><br><span class="line">#ui镜像</span><br><span class="line">im2=`curl -s https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml|grep image |awk &apos;&#123;print $2&#125;&apos;`</span><br><span class="line">#网络镜像</span><br><span class="line">im3=`curl -s https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml |grep image|grep amd64|uniq|awk &apos;&#123;print $2&#125;&apos;`</span><br><span class="line">ki=`echo $im1 $im2 $im3`</span><br><span class="line">#新的images镜像名称</span><br><span class="line">kia=(`for i in $&#123;ki[*]&#125;;do echo $i | sed &apos;s/k8s.gcr.io/registry.cn-shenzhen.aliyuncs.com\/grc/&apos;; done`)</span><br><span class="line">#下载images镜像</span><br><span class="line">for i in $&#123;kia[*]&#125;;do docker pull $&#123;i&#125;; done</span><br><span class="line">#修改images标签</span><br><span class="line">for ((i=0;i&lt;$&#123;#ki[@]&#125;;i++));do docker tag  $&#123;kia[i]&#125; $&#123;ki[i]&#125;;done</span><br></pre></td></tr></table></figure><h4 id="查看所需的images"><a href="#查看所需的images" class="headerlink" title="查看所需的images"></a>查看所需的images</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm config images list</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">k8s.gcr.io/kube-apiserver:v1.13.2</span><br><span class="line">k8s.gcr.io/kube-controller-manager:v1.13.2</span><br><span class="line">k8s.gcr.io/kube-scheduler:v1.13.2</span><br><span class="line">k8s.gcr.io/kube-proxy:v1.13.2</span><br><span class="line">k8s.gcr.io/pause:3.1</span><br><span class="line">k8s.gcr.io/etcd:3.2.24</span><br><span class="line">k8s.gcr.io/coredns:1.2.6</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.1</span><br><span class="line">quay.io/coreos/flannel：v0.11.0-amd64</span><br></pre></td></tr></table></figure><h4 id="查看-dashboard-版本"><a href="#查看-dashboard-版本" class="headerlink" title="查看 dashboard 版本"></a>查看 dashboard 版本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://raw.githubusercontent.com/kubernetes/dashboard/master/aio/deploy/recommended/kubernetes-dashboard.yaml</span><br></pre></td></tr></table></figure><h4 id="查看-flannel-版本"><a href="#查看-flannel-版本" class="headerlink" title="查看 flannel 版本"></a>查看 flannel 版本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure><h3 id="k8s部署"><a href="#k8s部署" class="headerlink" title="k8s部署"></a>k8s部署</h3><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><p>（指定k8s版本，内网ip段，apiserver的ip）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init --kubernetes-version=1.15.0 --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address=192.168.0.227</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init --pod-network-cidr=10.244.0.0/16</span><br></pre></td></tr></table></figure><h4 id="重置kubeadm"><a href="#重置kubeadm" class="headerlink" title="重置kubeadm"></a>重置kubeadm</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm reset</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /var/lib/cni/ $HOME/.kube/config</span><br></pre></td></tr></table></figure><h3 id="k8s插件安装"><a href="#k8s插件安装" class="headerlink" title="k8s插件安装"></a>k8s插件安装</h3><h4 id="安装网络"><a href="#安装网络" class="headerlink" title="安装网络"></a>安装网络</h4><p>(注意配置文件中的network的网段)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br><span class="line">sudo kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/k8s-manifests/kube-flannel-rbac.yml</span><br></pre></td></tr></table></figure><h4 id="dashboard安装"><a href="#dashboard安装" class="headerlink" title="dashboard安装"></a>dashboard安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta1/aio/deploy/recommended.yaml</span><br><span class="line">kubectl proxy</span><br></pre></td></tr></table></figure><p><a href="https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/" target="_blank" rel="noopener">https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/</a><br><a href="https://github.com/kubernetes/dashboard/wiki/Creating-sample-user" target="_blank" rel="noopener">https://github.com/kubernetes/dashboard/wiki/Creating-sample-user</a></p><h5 id="dashboard正式"><a href="#dashboard正式" class="headerlink" title="dashboard正式"></a>dashboard正式</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml</span><br></pre></td></tr></table></figure><h6 id="创建用户文件"><a href="#创建用户文件" class="headerlink" title="创建用户文件"></a>创建用户文件</h6><p>dashboard-adminuser.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: admin-user</span><br><span class="line">  namespace: kube-system</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: admin-user</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: cluster-admin</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: admin-user</span><br><span class="line">  namespace: kube-system</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f dashboard-adminuser.yaml</span><br></pre></td></tr></table></figure><h5 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl proxy</span><br></pre></td></tr></table></figure><h5 id="查看token"><a href="#查看token" class="headerlink" title="查看token"></a>查看token</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk &apos;&#123;print $1&#125;&apos;)</span><br></pre></td></tr></table></figure><h5 id="访问地址"><a href="#访问地址" class="headerlink" title="访问地址"></a>访问地址</h5><p>使用xshell把8001映射到8001</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Kubernetes 是一个跨主机集群的 开源的容器调度平台，它可以自动化应用容器的部署、扩展和操作 , 提供以容器为中心的基础架构。&lt;/p&gt;
    
    </summary>
    
    
      <category term="集群" scheme="http://blog.mooom.top/categories/%E9%9B%86%E7%BE%A4/"/>
    
    
      <category term="k8s" scheme="http://blog.mooom.top/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>Laas Pass Saas 区别</title>
    <link href="http://blog.mooom.top/2018/09/10/laaspasssaas/"/>
    <id>http://blog.mooom.top/2018/09/10/laaspasssaas/</id>
    <published>2018-09-10T03:50:21.000Z</published>
    <updated>2019-07-12T08:07:25.639Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>IaaS（Infrastructure as a Service）即基础设施即服务。<br>PaaS（Platform as a Service）即平台即服务。<br>SaaS（Software as a Service）即软件即服务。</p><a id="more"></a><h2 id="披萨举例"><a href="#披萨举例" class="headerlink" title="披萨举例"></a>披萨举例</h2><p><img src="../../../../image/pizzalaaspasssaas.jpg" alt="avatar"></p><h2 id="系统举例"><a href="#系统举例" class="headerlink" title="系统举例"></a>系统举例</h2><p><img src="../../../../image/systemlaaspasssaas.jpg" alt="avatar"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;IaaS（Infrastructure as a Service）即基础设施即服务。&lt;br&gt;PaaS（Platform as a Service）即平台即服务。&lt;br&gt;SaaS（Software as a Service）即软件即服务。&lt;/p&gt;
    
    </summary>
    
    
      <category term="概念" scheme="http://blog.mooom.top/categories/%E6%A6%82%E5%BF%B5/"/>
    
    
      <category term="系统" scheme="http://blog.mooom.top/tags/%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>docker镜像实例</title>
    <link href="http://blog.mooom.top/2018/09/10/dockerdemo/"/>
    <id>http://blog.mooom.top/2018/09/10/dockerdemo/</id>
    <published>2018-09-10T03:49:26.000Z</published>
    <updated>2019-07-12T08:07:25.635Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>docker 常用镜像实例 <a id="more"></a></p><h2 id="jenkins"><a href="#jenkins" class="headerlink" title="jenkins"></a>jenkins</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">  -u root \</span><br><span class="line">  --rm \</span><br><span class="line">  -d \</span><br><span class="line">  -p 8080:8080 \</span><br><span class="line">  -v jenkins-data:/var/jenkins_home \</span><br><span class="line">  -v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">  jenkinsci/blueocean</span><br></pre></td></tr></table></figure><h2 id="gitlab"><a href="#gitlab" class="headerlink" title="gitlab"></a>gitlab</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run --detach \</span><br><span class="line">    --hostname gitlab.example.com \</span><br><span class="line">    --publish 443:443 --publish 80:80 --publish 22:22 \</span><br><span class="line">    --name gitlab \</span><br><span class="line">    --restart always \</span><br><span class="line">    --volume /srv/gitlab/config:/etc/gitlab \</span><br><span class="line">    --volume /srv/gitlab/logs:/var/log/gitlab \</span><br><span class="line">    --volume /srv/gitlab/data:/var/opt/gitlab \</span><br><span class="line">    gitlab/gitlab-ce:latest</span><br></pre></td></tr></table></figure><h2 id="shadowsocks"><a href="#shadowsocks" class="headerlink" title="shadowsocks"></a>shadowsocks</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">    -d \</span><br><span class="line">    -p 8388:8388 \</span><br><span class="line">    --restart=always \</span><br><span class="line">    oddrationale/docker-shadowsocks \</span><br><span class="line">    -s 0.0.0.0 \</span><br><span class="line">    -p 7749 \</span><br><span class="line">    -k password \</span><br><span class="line">    -m aes-256-cfb</span><br></pre></td></tr></table></figure><h2 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run --name mysql-server -t \      </span><br><span class="line">    -e MYSQL_DATABASE=&quot;dataname&quot; \     </span><br><span class="line">    -e MYSQL_USER=&quot;user&quot; \      </span><br><span class="line">    -e MYSQL_PASSWORD=&quot;passwd&quot; \      </span><br><span class="line">    -e MYSQL_ROOT_PASSWORD=&quot;root_pwd&quot; \</span><br><span class="line">    -d mysql:5.7</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;docker 常用镜像实例
    
    </summary>
    
    
      <category term="linux" scheme="http://blog.mooom.top/categories/linux/"/>
    
    
      <category term="docker" scheme="http://blog.mooom.top/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>docker命令 版本信息</title>
    <link href="http://blog.mooom.top/2018/09/10/dockercomxxbb/"/>
    <id>http://blog.mooom.top/2018/09/10/dockercomxxbb/</id>
    <published>2018-09-10T03:49:13.000Z</published>
    <updated>2019-07-12T08:07:25.635Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>docker 版本信息查看<a id="more"></a></p><h2 id="docker-info"><a href="#docker-info" class="headerlink" title="docker info"></a>docker info</h2><p>显示 Docker 系统信息，包括镜像和容器数。。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker info [OPTIONS]</span><br></pre></td></tr></table></figure><h2 id="docker-version"><a href="#docker-version" class="headerlink" title="docker version"></a>docker version</h2><p>显示 Docker 版本信息。</p><h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker version [OPTIONS]</span><br></pre></td></tr></table></figure><h3 id="OPTIONS说明："><a href="#OPTIONS说明：" class="headerlink" title="OPTIONS说明："></a>OPTIONS说明：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-f :指定返回值的模板文件。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;docker 版本信息查看
    
    </summary>
    
    
      <category term="linux" scheme="http://blog.mooom.top/categories/linux/"/>
    
    
      <category term="docker" scheme="http://blog.mooom.top/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>docker命令 本地镜像管理</title>
    <link href="http://blog.mooom.top/2018/09/10/dockercombdjx/"/>
    <id>http://blog.mooom.top/2018/09/10/dockercombdjx/</id>
    <published>2018-09-10T03:49:01.000Z</published>
    <updated>2019-07-12T08:07:25.629Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>docker 本地镜像查看、删除、修改、build、历史、导出、导入。<a id="more"></a></p><h2 id="docker-images"><a href="#docker-images" class="headerlink" title="docker images"></a>docker images</h2><p>列出本地镜像。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images [OPTIONS] [REPOSITORY[:TAG]]</span><br></pre></td></tr></table></figure><h3 id="OPTIONS说明："><a href="#OPTIONS说明：" class="headerlink" title="OPTIONS说明："></a>OPTIONS说明：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-a :列出本地所有的镜像（含中间映像层，默认情况下，过滤掉中间映像层）；</span><br><span class="line">--digests :显示镜像的摘要信息；</span><br><span class="line">-f :显示满足条件的镜像；</span><br><span class="line">--format :指定返回值的模板文件；</span><br><span class="line">--no-trunc :显示完整的镜像信息；</span><br><span class="line">-q :只显示镜像ID。</span><br></pre></td></tr></table></figure><h2 id="docker-rmi"><a href="#docker-rmi" class="headerlink" title="docker rmi"></a>docker rmi</h2><p>删除本地一个或多少镜像。</p><h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi [OPTIONS] IMAGE [IMAGE...]</span><br></pre></td></tr></table></figure><h3 id="OPTIONS说明：-1"><a href="#OPTIONS说明：-1" class="headerlink" title="OPTIONS说明："></a>OPTIONS说明：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-f :强制删除；</span><br><span class="line">--no-prune :不移除该镜像的过程镜像，默认移除；</span><br></pre></td></tr></table></figure><h2 id="docker-tag"><a href="#docker-tag" class="headerlink" title="docker tag"></a>docker tag</h2><p>标记本地镜像，将其归入某一仓库。</p><h3 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag [OPTIONS] IMAGE[:TAG] [REGISTRYHOST/][USERNAME/]NAME[:TAG]</span><br></pre></td></tr></table></figure><h2 id="docker-build"><a href="#docker-build" class="headerlink" title="docker build"></a>docker build</h2><p>命令用于使用 Dockerfile 创建镜像。</p><h3 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build [OPTIONS] PATH | URL | -</span><br></pre></td></tr></table></figure><h3 id="OPTIONS说明：-2"><a href="#OPTIONS说明：-2" class="headerlink" title="OPTIONS说明："></a>OPTIONS说明：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">--build-arg=[] :设置镜像创建时的变量；</span><br><span class="line">--cpu-shares :设置 cpu 使用权重；</span><br><span class="line">--cpu-period :限制 CPU CFS周期；</span><br><span class="line">--cpu-quota :限制 CPU CFS配额；</span><br><span class="line">--cpuset-cpus :指定使用的CPU id；</span><br><span class="line">--cpuset-mems :指定使用的内存 id；</span><br><span class="line">--disable-content-trust :忽略校验，默认开启；</span><br><span class="line">-f :指定要使用的Dockerfile路径；</span><br><span class="line">--force-rm :设置镜像过程中删除中间容器；</span><br><span class="line">--isolation :使用容器隔离技术；</span><br><span class="line">--label=[] :设置镜像使用的元数据；</span><br><span class="line">-m :设置内存最大值；</span><br><span class="line">--memory-swap :设置Swap的最大值为内存+swap，&quot;-1&quot;表示不限swap；</span><br><span class="line">--no-cache :创建镜像的过程不使用缓存；</span><br><span class="line">--pull :尝试去更新镜像的新版本；</span><br><span class="line">--quiet, -q :安静模式，成功后只输出镜像 ID；</span><br><span class="line">--rm :设置镜像成功后删除中间容器；</span><br><span class="line">--shm-size :设置/dev/shm的大小，默认值是64M；</span><br><span class="line">--ulimit :Ulimit配置。</span><br><span class="line">--tag, -t: 镜像的名字及标签，通常 name:tag 或者 name 格式；可以在一次构建中为一个镜像设置多个标签。</span><br><span class="line">--network: 默认 default。在构建期间设置RUN指令的网络模式</span><br></pre></td></tr></table></figure><h2 id="docker-history"><a href="#docker-history" class="headerlink" title="docker history"></a>docker history</h2><p>查看指定镜像的创建历史。</p><h3 id="语法-4"><a href="#语法-4" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker history [OPTIONS] IMAGE</span><br></pre></td></tr></table></figure><h3 id="OPTIONS说明：-3"><a href="#OPTIONS说明：-3" class="headerlink" title="OPTIONS说明："></a>OPTIONS说明：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-H :以可读的格式打印镜像大小和日期，默认为true；</span><br><span class="line">--no-trunc :显示完整的提交记录；</span><br><span class="line">-q :仅列出提交记录ID。</span><br></pre></td></tr></table></figure><h2 id="docker-save"><a href="#docker-save" class="headerlink" title="docker save"></a>docker save</h2><p>将指定镜像保存成 tar 归档文件。</p><h3 id="语法-5"><a href="#语法-5" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker save [OPTIONS] IMAGE [IMAGE...]</span><br></pre></td></tr></table></figure><h3 id="OPTIONS说明：-4"><a href="#OPTIONS说明：-4" class="headerlink" title="OPTIONS说明："></a>OPTIONS说明：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-o :输出到的文件。</span><br></pre></td></tr></table></figure><h2 id="docker-import"><a href="#docker-import" class="headerlink" title="docker import"></a>docker import</h2><p>从归档文件中创建镜像。</p><h3 id="语法-6"><a href="#语法-6" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker import [OPTIONS] file|URL|- [REPOSITORY[:TAG]]</span><br></pre></td></tr></table></figure><h3 id="OPTIONS说明：-5"><a href="#OPTIONS说明：-5" class="headerlink" title="OPTIONS说明："></a>OPTIONS说明：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-c :应用docker 指令创建镜像；</span><br><span class="line">-m :提交时的说明文字；</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;docker 本地镜像查看、删除、修改、build、历史、导出、导入。
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>docker命令 镜像仓库</title>
    <link href="http://blog.mooom.top/2018/09/10/dockercomjxck/"/>
    <id>http://blog.mooom.top/2018/09/10/dockercomjxck/</id>
    <published>2018-09-10T03:48:47.000Z</published>
    <updated>2019-07-12T08:07:25.630Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>docker 仓库登陆、登出、镜像拉取、推送、搜索。<a id="more"></a></p><h2 id="docker-login"><a href="#docker-login" class="headerlink" title="docker login"></a>docker login</h2><p>登陆到一个Docker镜像仓库，如果未指定镜像仓库地址，默认为官方仓库 Docker Hub</p><h2 id="docker-logout"><a href="#docker-logout" class="headerlink" title="docker logout"></a>docker logout</h2><p>登出一个Docker镜像仓库，如果未指定镜像仓库地址，默认为官方仓库 Docker Hub</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker login [OPTIONS] [SERVER]</span><br><span class="line">docker logout [OPTIONS] [SERVER]</span><br></pre></td></tr></table></figure><h3 id="OPTIONS说明："><a href="#OPTIONS说明：" class="headerlink" title="OPTIONS说明："></a>OPTIONS说明：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-u :登陆的用户名</span><br><span class="line">-p :登陆的密码</span><br></pre></td></tr></table></figure><h2 id="docker-pull"><a href="#docker-pull" class="headerlink" title="docker pull"></a>docker pull</h2><p>从镜像仓库中拉取或者更新指定镜像</p><h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull [OPTIONS] NAME[:TAG|@DIGEST]</span><br></pre></td></tr></table></figure><h3 id="OPTIONS说明：-1"><a href="#OPTIONS说明：-1" class="headerlink" title="OPTIONS说明："></a>OPTIONS说明：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-a :拉取所有 tagged 镜像</span><br><span class="line">--disable-content-trust :忽略镜像的校验,默认开启</span><br></pre></td></tr></table></figure><h2 id="docker-push"><a href="#docker-push" class="headerlink" title="docker push"></a>docker push</h2><p>将本地的镜像上传到镜像仓库,要先登陆到镜像仓库</p><h3 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker push [OPTIONS] NAME[:TAG]</span><br></pre></td></tr></table></figure><h3 id="OPTIONS说明：-2"><a href="#OPTIONS说明：-2" class="headerlink" title="OPTIONS说明："></a>OPTIONS说明：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--disable-content-trust :忽略镜像的校验,默认开启</span><br></pre></td></tr></table></figure><h2 id="docker-search"><a href="#docker-search" class="headerlink" title="docker search"></a>docker search</h2><p>从Docker Hub查找镜像</p><h3 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search [OPTIONS] TERM</span><br></pre></td></tr></table></figure><h3 id="OPTIONS说明：-3"><a href="#OPTIONS说明：-3" class="headerlink" title="OPTIONS说明："></a>OPTIONS说明：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--automated :只列出 automated build类型的镜像；</span><br><span class="line">--no-trunc :显示完整的镜像描述；</span><br><span class="line">-s :列出收藏数不小于指定值的镜像。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;docker 仓库登陆、登出、镜像拉取、推送、搜索。
    
    </summary>
    
    
      <category term="linux" scheme="http://blog.mooom.top/categories/linux/"/>
    
    
      <category term="docker" scheme="http://blog.mooom.top/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>docker命令 rootfs命</title>
    <link href="http://blog.mooom.top/2018/09/10/dockercomrootfs/"/>
    <id>http://blog.mooom.top/2018/09/10/dockercomrootfs/</id>
    <published>2018-09-10T03:48:37.000Z</published>
    <updated>2019-07-12T08:07:25.632Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>docker 容器转镜像、拷贝文件、查看容器文件结构。<a id="more"></a></p><h2 id="docker-commit"><a href="#docker-commit" class="headerlink" title="docker commit"></a>docker commit</h2><p>从容器创建一个新的镜像。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]</span><br></pre></td></tr></table></figure><h3 id="OPTIONS说明："><a href="#OPTIONS说明：" class="headerlink" title="OPTIONS说明："></a>OPTIONS说明：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-a :提交的镜像作者；</span><br><span class="line">-c :使用Dockerfile指令来创建镜像；</span><br><span class="line">-m :提交时的说明文字；</span><br><span class="line">-p :在commit时，将容器暂停。</span><br></pre></td></tr></table></figure><h2 id="docker-cp"><a href="#docker-cp" class="headerlink" title="docker cp"></a>docker cp</h2><p>用于容器与主机之间的数据拷贝。</p><h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker cp [OPTIONS] CONTAINER:SRC_PATH DEST_PATH|-</span><br><span class="line">docker cp [OPTIONS] SRC_PATH|- CONTAINER:DEST_PATH</span><br><span class="line">```   </span><br><span class="line">### OPTIONS说明：</span><br></pre></td></tr></table></figure><p>-L :保持源目标中的链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">## docker diff</span><br><span class="line">检查容器里文件结构的更改。</span><br><span class="line">### 语法</span><br></pre></td></tr></table></figure><p>docker diff [OPTIONS] CONTAINER</p><pre><code></code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;docker 容器转镜像、拷贝文件、查看容器文件结构。
    
    </summary>
    
    
      <category term="linux" scheme="http://blog.mooom.top/categories/linux/"/>
    
    
      <category term="docker" scheme="http://blog.mooom.top/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>docker命令 容器操作</title>
    <link href="http://blog.mooom.top/2018/09/10/dockercomrqcz/"/>
    <id>http://blog.mooom.top/2018/09/10/dockercomrqcz/</id>
    <published>2018-09-10T03:48:14.000Z</published>
    <updated>2019-07-12T08:07:25.633Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Docker 容器容器操作 查看、获取 。 <a id="more"></a></p><!-- more --><h2 id="docker-ps"><a href="#docker-ps" class="headerlink" title="docker ps"></a>docker ps</h2><p>列出容器</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps [OPTIONS]</span><br></pre></td></tr></table></figure><h3 id="OPTIONS说明："><a href="#OPTIONS说明：" class="headerlink" title="OPTIONS说明："></a>OPTIONS说明：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-a :显示所有的容器，包括未运行的。</span><br><span class="line">-f :根据条件过滤显示的内容。</span><br><span class="line">--format :指定返回值的模板文件。</span><br><span class="line">-l :显示最近创建的容器。</span><br><span class="line">-n :列出最近创建的n个容器。</span><br><span class="line">--no-trunc :不截断输出。</span><br><span class="line">-q :静默模式，只显示容器编号。</span><br><span class="line">-s :显示总的文件大小。</span><br></pre></td></tr></table></figure><h2 id="docker-inspect"><a href="#docker-inspect" class="headerlink" title="docker inspect :"></a>docker inspect :</h2><p>获取容器/镜像的元数据。</p><h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect [OPTIONS] NAME|ID [NAME|ID...]</span><br></pre></td></tr></table></figure><h3 id="OPTIONS说明：-1"><a href="#OPTIONS说明：-1" class="headerlink" title="OPTIONS说明："></a>OPTIONS说明：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-f :指定返回值的模板文件。</span><br><span class="line">-s :显示总的文件大小。</span><br><span class="line">--type :为指定类型返回JSON。</span><br></pre></td></tr></table></figure><h2 id="docker-top"><a href="#docker-top" class="headerlink" title="docker top"></a>docker top</h2><p>查看容器中运行的进程信息，支持 ps 命令参数。</p><h3 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker top [OPTIONS] CONTAINER [ps OPTIONS]</span><br></pre></td></tr></table></figure><p>容器运行时不一定有/bin/bash终端来交互执行top命令，而且容器还不一定有top命令，可以使用docker top来实现查看container中正在运行的进程。</p><h2 id="docker-attach"><a href="#docker-attach" class="headerlink" title="docker attach"></a>docker attach</h2><p>连接到正在运行中的容器。</p><h3 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker attach [OPTIONS] CONTAINER</span><br></pre></td></tr></table></figure><p>要attach上去的容器必须正在运行，可以同时连接上同一个container来共享屏幕（与screen命令的attach类似）。<br>官方文档中说attach后可以通过CTRL-C来detach，但实际上经过我的测试，如果container当前在运行bash，CTRL-C自然是当前行的输入，没有退出；如果container当前正在前台运行进程，如输出nginx的access.log日志，CTRL-C不仅会导致退出容器，而且还stop了。这不是我们想要的，detach的意思按理应该是脱离容器终端，但容器依然运行。好在attach是可以带上–sig-proxy=false来确保CTRL-D或CTRL-C不会关闭容器。</p><h2 id="docker-events"><a href="#docker-events" class="headerlink" title="docker events"></a>docker events</h2><p>从服务器获取实时事件</p><p>###语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker events [OPTIONS]</span><br></pre></td></tr></table></figure><h3 id="OPTIONS说明：-2"><a href="#OPTIONS说明：-2" class="headerlink" title="OPTIONS说明："></a>OPTIONS说明：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-f ：根据条件过滤事件；</span><br><span class="line">--since ：从指定的时间戳后显示所有事件;</span><br><span class="line">--until ：流水时间显示到指定的时间为止；</span><br></pre></td></tr></table></figure><h2 id="docker-logs"><a href="#docker-logs" class="headerlink" title="docker logs"></a>docker logs</h2><p>获取容器的日志</p><h3 id="语法-4"><a href="#语法-4" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs [OPTIONS] CONTAINER</span><br></pre></td></tr></table></figure><h3 id="OPTIONS说明：-3"><a href="#OPTIONS说明：-3" class="headerlink" title="OPTIONS说明："></a>OPTIONS说明：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-f : 跟踪日志输出</span><br><span class="line">--since :显示某个开始时间的所有日志</span><br><span class="line">-t : 显示时间戳</span><br><span class="line">--tail :仅列出最新N条容器日志</span><br></pre></td></tr></table></figure><h2 id="docker-wait"><a href="#docker-wait" class="headerlink" title="docker wait"></a>docker wait</h2><p>阻塞运行直到容器停止，然后打印出它的退出代码。</p><h3 id="语法-5"><a href="#语法-5" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker wait [OPTIONS] CONTAINER [CONTAINER...]</span><br></pre></td></tr></table></figure><h2 id="docker-export"><a href="#docker-export" class="headerlink" title="docker export"></a>docker export</h2><p>将文件系统作为一个tar归档文件导出到STDOUT。</p><h3 id="语法-6"><a href="#语法-6" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker export [OPTIONS] CONTAINER</span><br></pre></td></tr></table></figure><h3 id="OPTIONS说明：-4"><a href="#OPTIONS说明：-4" class="headerlink" title="OPTIONS说明："></a>OPTIONS说明：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-o :将输入内容写到文件。</span><br></pre></td></tr></table></figure><h2 id="docker-port"><a href="#docker-port" class="headerlink" title="docker port"></a>docker port</h2><p>列出指定的容器的端口映射，或者查找将PRIVATE_PORT NAT到面向公众的端口。</p><h3 id="语法-7"><a href="#语法-7" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker port [OPTIONS] CONTAINER [PRIVATE_PORT[/PROTO]]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Docker 容器容器操作 查看、获取 。
    
    </summary>
    
    
      <category term="linux" scheme="http://blog.mooom.top/categories/linux/"/>
    
    
      <category term="docker" scheme="http://blog.mooom.top/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>docker命令 生命周期</title>
    <link href="http://blog.mooom.top/2018/09/10/dockercomsmzq/"/>
    <id>http://blog.mooom.top/2018/09/10/dockercomsmzq/</id>
    <published>2018-09-10T03:19:27.000Z</published>
    <updated>2019-07-12T08:07:25.634Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Docker 容器生命周期管理 创建、启动、停止、重启、结束、暂停、恢复、创建、执行 。 <a id="more"></a></p><h2 id="docker-run"><a href="#docker-run" class="headerlink" title="docker run"></a>docker run</h2><p>创建一个新的容器并运行一个命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run [OPTIONS] IMAGE [COMMAND] [ARG...]</span><br></pre></td></tr></table></figure><h3 id="OPTIONS说明："><a href="#OPTIONS说明：" class="headerlink" title="OPTIONS说明："></a>OPTIONS说明：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">-a stdin: 指定标准输入输出内容类型，可选 STDIN/STDOUT/STDERR 三项；</span><br><span class="line">-d: 后台运行容器，并返回容器ID；</span><br><span class="line">-i: 以交互模式运行容器，通常与 -t 同时使用；</span><br><span class="line">-p: 端口映射，格式为：主机(宿主)端口:容器端口</span><br><span class="line">-t: 为容器重新分配一个伪输入终端，通常与 -i 同时使用；</span><br><span class="line">--name=&quot;nginx-lb&quot;: 为容器指定一个名称；</span><br><span class="line">--dns 8.8.8.8: 指定容器使用的DNS服务器，默认和宿主一致；</span><br><span class="line">--dns-search example.com: 指定容器DNS搜索域名，默认和宿主一致；</span><br><span class="line">-h &quot;mars&quot;: 指定容器的hostname；</span><br><span class="line">-e username=&quot;ritchie&quot;: 设置环境变量；</span><br><span class="line">--env-file=[]: 从指定文件读入环境变量；</span><br><span class="line">--cpuset=&quot;0-2&quot; or --cpuset=&quot;0,1,2&quot;: 绑定容器到指定CPU运行；</span><br><span class="line">-m :设置容器使用内存最大值；</span><br><span class="line">--net=&quot;bridge&quot;: 指定容器的网络连接类型，支持 bridge/host/none/container: 四种类型；</span><br><span class="line">--link=[]: 添加链接到另一个容器；</span><br><span class="line">--expose=[]: 开放一个端口或一组端口；</span><br></pre></td></tr></table></figure><h2 id="Docker-start-stop-restart"><a href="#Docker-start-stop-restart" class="headerlink" title="Docker start/stop/restart"></a>Docker start/stop/restart</h2><h3 id="docker-start"><a href="#docker-start" class="headerlink" title="docker start"></a>docker start</h3><p>启动一个或多少已经被停止的容器</p><h3 id="docker-stop"><a href="#docker-stop" class="headerlink" title="docker stop"></a>docker stop</h3><p>停止一个运行中的容器</p><h3 id="docker-restart"><a href="#docker-restart" class="headerlink" title="docker restart"></a>docker restart</h3><p>重启容器</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker start [OPTIONS] CONTAINER [CONTAINER...]</span><br><span class="line">docker stop [OPTIONS] CONTAINER [CONTAINER...]</span><br><span class="line">docker restart [OPTIONS] CONTAINER [CONTAINER...]</span><br></pre></td></tr></table></figure><h2 id="docker-kill"><a href="#docker-kill" class="headerlink" title="docker kill"></a>docker kill</h2><p>杀掉一个运行中的容器。</p><h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker kill [OPTIONS] CONTAINER [CONTAINER...]</span><br></pre></td></tr></table></figure><h3 id="OPTIONS说明：-1"><a href="#OPTIONS说明：-1" class="headerlink" title="OPTIONS说明："></a>OPTIONS说明：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-s :向容器发送一个信号</span><br></pre></td></tr></table></figure><h2 id="docker-rm"><a href="#docker-rm" class="headerlink" title="docker rm"></a>docker rm</h2><p>删除一个或多少容器</p><h3 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm [OPTIONS] CONTAINER [CONTAINER...]</span><br></pre></td></tr></table></figure><h3 id="OPTIONS说明：-2"><a href="#OPTIONS说明：-2" class="headerlink" title="OPTIONS说明："></a>OPTIONS说明：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-f :通过SIGKILL信号强制删除一个运行中的容器</span><br><span class="line">-l :移除容器间的网络连接，而非容器本身</span><br><span class="line">-v :-v 删除与容器关联的卷</span><br></pre></td></tr></table></figure><h2 id="docker-pause"><a href="#docker-pause" class="headerlink" title="docker pause"></a>docker pause</h2><p>暂停容器中所有的进程。</p><h2 id="docker-unpause"><a href="#docker-unpause" class="headerlink" title="docker unpause"></a>docker unpause</h2><p>恢复容器中所有的进程。</p><h3 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pause [OPTIONS] CONTAINER [CONTAINER...]</span><br><span class="line">docker unpause [OPTIONS] CONTAINER [CONTAINER...]</span><br></pre></td></tr></table></figure><h2 id="docker-create"><a href="#docker-create" class="headerlink" title="docker create"></a>docker create</h2><p>创建一个新的容器但不启动它<br>语法同 docker run</p><h3 id="语法-4"><a href="#语法-4" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker create [OPTIONS] IMAGE [COMMAND] [ARG...]</span><br></pre></td></tr></table></figure><h2 id="docker-exec"><a href="#docker-exec" class="headerlink" title="docker exec"></a>docker exec</h2><p>在运行的容器中执行命令</p><h3 id="语法-5"><a href="#语法-5" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec [OPTIONS] CONTAINER COMMAND [ARG...]</span><br></pre></td></tr></table></figure><h3 id="OPTIONS说明：-3"><a href="#OPTIONS说明：-3" class="headerlink" title="OPTIONS说明："></a>OPTIONS说明：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-d :分离模式: 在后台运行</span><br><span class="line">-i :即使没有附加也保持STDIN 打开</span><br><span class="line">-t :分配一个伪终端</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Docker 容器生命周期管理 创建、启动、停止、重启、结束、暂停、恢复、创建、执行 。
    
    </summary>
    
    
      <category term="linux" scheme="http://blog.mooom.top/categories/linux/"/>
    
    
      <category term="docker" scheme="http://blog.mooom.top/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>dockerfile</title>
    <link href="http://blog.mooom.top/2018/09/07/dockerfile/"/>
    <id>http://blog.mooom.top/2018/09/07/dockerfile/</id>
    <published>2018-09-07T03:06:24.000Z</published>
    <updated>2019-07-12T08:07:25.636Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Dockfile是一种被Docker程序解释的脚本，Dockerfile由一条一条的指令组成，每条指令对应Linux下面的一条命令。<a id="more"></a>Docker程序将这些Dockerfile指令翻译真正的Linux命令。Docker通过读取Dockerfile中的指令自动生成映像。</p><h1 id="使用例子"><a href="#使用例子" class="headerlink" title="使用例子"></a>使用例子</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -f /tmp/Dockerfile</span><br></pre></td></tr></table></figure><h2 id="Dockerfile-基本结构"><a href="#Dockerfile-基本结构" class="headerlink" title="Dockerfile 基本结构"></a>Dockerfile 基本结构</h2><p>Dockerfile 一般分为四部分：基础镜像信息、维护者信息、镜像操作指令和容器启动时执行指令，’#’ 为 Dockerfile 中的注释。</p><h2 id="Dockerfile文件说明"><a href="#Dockerfile文件说明" class="headerlink" title="Dockerfile文件说明"></a>Dockerfile文件说明</h2><p>Docker以从上到下的顺序运行Dockerfile的指令。为了指定基本映像，第一条指令必须是FROM。一个声明以＃字符开头则被视为注释。可以在Docker文件中使用RUN，CMD，FROM，EXPOSE，ENV等指令。<br>FROM：指定基础镜像，必须为第一个命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line">　　FROM &lt;image&gt;</span><br><span class="line">　　FROM &lt;image&gt;:&lt;tag&gt;</span><br><span class="line">　　FROM &lt;image&gt;@&lt;digest&gt;</span><br><span class="line">示例：</span><br><span class="line">　　FROM ubuntu:16.04</span><br><span class="line">注：</span><br><span class="line">　　tag或digest是可选的，如果不使用这两个值时，会使用latest版本的基础镜像</span><br></pre></td></tr></table></figure><h2 id="MAINTAINER"><a href="#MAINTAINER" class="headerlink" title="MAINTAINER"></a>MAINTAINER</h2><p>: 维护者信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line">MAINTAINER &lt;name&gt;</span><br><span class="line">示例：</span><br><span class="line">MAINTAINER dongs365</span><br><span class="line">MAINTAINER dongs365@163.com</span><br><span class="line">MAINTAINER dongs365 &lt;dongs365@163.com&gt;</span><br></pre></td></tr></table></figure><h2 id="RUN"><a href="#RUN" class="headerlink" title="RUN"></a>RUN</h2><p>：构建镜像时执行的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">RUN用于在镜像容器中执行命令，其有以下两种命令执行方式：</span><br><span class="line">shell执行格式：</span><br><span class="line">RUN &lt;command&gt;</span><br><span class="line">exec执行格式：</span><br><span class="line">RUN [&quot;executable&quot;, &quot;param1&quot;, &quot;param2&quot;]</span><br><span class="line">示例：</span><br><span class="line">RUN [&quot;executable&quot;, &quot;param1&quot;, &quot;param2&quot;]</span><br><span class="line">RUN apk update</span><br><span class="line">RUN [&quot;/etc/execfile&quot;, &quot;arg1&quot;, &quot;arg1&quot;]</span><br><span class="line">注：</span><br><span class="line">　　RUN指令创建的中间镜像会被缓存，并会在下次构建中使用。如果不想使用这些缓存镜像，可以在构建时指定--no-cache参数，如：docker build --no-cache</span><br></pre></td></tr></table></figure><h2 id="ADD"><a href="#ADD" class="headerlink" title="ADD"></a>ADD</h2><p>：将本地文件添加到容器中，tar类型文件会自动解压，可以访问网络资源，类似wget</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line">ADD &lt;src&gt;... &lt;dest&gt;</span><br><span class="line">ADD [&quot;&lt;src&gt;&quot;,... &quot;&lt;dest&gt;&quot;] 用于支持包含空格的路径</span><br><span class="line">示例：</span><br><span class="line">ADD hom* /mydir/ # 添加所有以&quot;hom&quot;开头的文件</span><br><span class="line">ADD hom?.txt /mydir/ # ? 替代一个单字符,例如：&quot;home.txt&quot;</span><br><span class="line">ADD test relativeDir/ # 添加 &quot;test&quot; 到 `WORKDIR`/relativeDir/</span><br><span class="line">ADD test /absoluteDir/ # 添加 &quot;test&quot; 到 /absoluteDir/</span><br></pre></td></tr></table></figure><h2 id="COPY"><a href="#COPY" class="headerlink" title="COPY"></a>COPY</h2><p>：功能类似ADD，但是是不会自动解压文件，也不能访问网络资源</p><h2 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h2><p>：构建容器后调用，也就是在容器启动时才进行调用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line">CMD [&quot;executable&quot;,&quot;param1&quot;,&quot;param2&quot;] (执行可执行文件，优先)</span><br><span class="line">CMD [&quot;param1&quot;,&quot;param2&quot;] (设置了ENTRYPOINT，则直接调用ENTRYPOINT添加参数)</span><br><span class="line">CMD command param1 param2 (执行shell内部命令)</span><br><span class="line">示例：</span><br><span class="line">CMD echo &quot;This is a test.&quot; | wc -</span><br><span class="line">CMD [&quot;/usr/bin/wc&quot;,&quot;--help&quot;]</span><br><span class="line">注：</span><br><span class="line">　　CMD不同于RUN，CMD用于指定在容器启动时所要执行的命令，而RUN用于指定镜像构建时所要执行的命令。</span><br></pre></td></tr></table></figure><h2 id="ENTRYPOINT"><a href="#ENTRYPOINT" class="headerlink" title="ENTRYPOINT"></a>ENTRYPOINT</h2><p>：配置容器，使其可执行化。配合CMD可省去”application”，只使用参数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line">ENTRYPOINT [&quot;executable&quot;, &quot;param1&quot;, &quot;param2&quot;] (可执行文件, 优先)</span><br><span class="line">ENTRYPOINT command param1 param2 (shell内部命令)</span><br><span class="line">示例：</span><br><span class="line">FROM ubuntu</span><br><span class="line">ENTRYPOINT [&quot;top&quot;, &quot;-b&quot;]</span><br><span class="line">CMD [&quot;-c&quot;]</span><br><span class="line">注：</span><br><span class="line">　　　ENTRYPOINT与CMD非常类似，不同的是通过docker run执行的命令不会覆盖ENTRYPOINT，而docker run命令中指定的任何参数，都会被当做参数再次传递给ENTRYPOINT。Dockerfile中只允许有一个ENTRYPOINT命令，多指定时会覆盖前面的设置，而只执行最后的ENTRYPOINT指令。</span><br></pre></td></tr></table></figure><h2 id="LABEL"><a href="#LABEL" class="headerlink" title="LABEL"></a>LABEL</h2><p>：用于为镜像添加元数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line">LABEL &lt;key&gt;=&lt;value&gt; &lt;key&gt;=&lt;value&gt; &lt;key&gt;=&lt;value&gt; ...</span><br><span class="line">示例：</span><br><span class="line">　　LABEL version=&quot;1.0&quot; description=&quot;这是一个Web服务器&quot; by=&quot;IT笔录&quot;</span><br><span class="line">注：</span><br><span class="line">　　使用LABEL指定元数据时，一条LABEL指定可以指定一或多条元数据，指定多条元数据时不同元数据之间通过空格分隔。推荐将所有的元数据通过一条LABEL指令指定，以免生成过多的中间镜像。</span><br></pre></td></tr></table></figure><h2 id="ENV"><a href="#ENV" class="headerlink" title="ENV"></a>ENV</h2><p>：设置环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line">ENV &lt;key&gt; &lt;value&gt;</span><br><span class="line">ENV &lt;key&gt;=&lt;value&gt; ...</span><br><span class="line">示例：</span><br><span class="line">ENV myName John Doe</span><br><span class="line">ENV myDog Rex The Dog</span><br><span class="line">ENV myCat fluffy</span><br></pre></td></tr></table></figure><h2 id="EXPOSE"><a href="#EXPOSE" class="headerlink" title="EXPOSE"></a>EXPOSE</h2><p>：指定于外界交互的端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line">EXPOSE &lt;port&gt; [&lt;port&gt;...]</span><br><span class="line">示例：</span><br><span class="line">EXPOSE 80 443</span><br><span class="line">EXPOSE 8080</span><br><span class="line">注：</span><br><span class="line">　　EXPOSE并不会让容器的端口访问到主机。要使其可访问，需要在docker run运行容器时通过-p来发布这些端口，或通过-P参数来发布EXPOSE导出的所有端口</span><br></pre></td></tr></table></figure><h2 id="VOLUME"><a href="#VOLUME" class="headerlink" title="VOLUME"></a>VOLUME</h2><p>：用于指定持久化目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line">VOLUME [&quot;/path/to/dir&quot;]</span><br><span class="line">示例：</span><br><span class="line">VOLUME [&quot;/data&quot;]</span><br><span class="line">VOLUME [&quot;/var/www&quot;, &quot;/var/log/apache2&quot;, &quot;/etc/apache2&quot;</span><br><span class="line">注：</span><br><span class="line">　　一个卷可以存在于一个或多个容器的指定目录，该目录可以绕过联合文件系统，并具有以下功能：</span><br><span class="line">1 卷可以容器间共享和重用</span><br><span class="line">2 容器并不一定要和其它容器共享卷</span><br><span class="line">3 修改卷后会立即生效</span><br><span class="line">4 对卷的修改不会对镜像产生影响</span><br><span class="line">5 卷会一直存在，直到没有任何容器在使用它</span><br></pre></td></tr></table></figure><h2 id="WORKDIR"><a href="#WORKDIR" class="headerlink" title="WORKDIR"></a>WORKDIR</h2><p>：工作目录，类似于cd命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line">WORKDIR /path/to/workdir</span><br><span class="line">示例：</span><br><span class="line">WORKDIR /a (这时工作目录为/a)</span><br><span class="line">WORKDIR b (这时工作目录为/a/b)</span><br><span class="line">WORKDIR c (这时工作目录为/a/b/c)</span><br><span class="line">注：</span><br><span class="line">　　通过WORKDIR设置工作目录后，Dockerfile中其后的命令RUN、CMD、ENTRYPOINT、ADD、COPY等命令都会在该目录下执行。在使用docker run运行容器时，可以通过-w参数覆盖构建时所设置的工作目录。</span><br></pre></td></tr></table></figure><h2 id="USER"><a href="#USER" class="headerlink" title="USER"></a>USER</h2><p>:指定运行容器时的用户名或 UID，后续的 RUN 也会使用指定用户。使用USER指定用户时，可以使用用户名、UID或GID，或是两者的组合。当服务不需要管理员权限时，可以通过该命令指定运行用户。并且可以在之前创建所需要的用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">格式:</span><br><span class="line">　　USER user</span><br><span class="line">　　USER user:group</span><br><span class="line">　　USER uid</span><br><span class="line">　　USER uid:gid</span><br><span class="line">　　USER user:gid</span><br><span class="line">　　USER uid:group</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">示例：</span><br><span class="line">　　USER www</span><br><span class="line">注：</span><br><span class="line">　　使用USER指定用户后，Dockerfile中其后的命令RUN、CMD、ENTRYPOINT都将使用该用户。镜像构建完成后，通过docker run运行容器时，可以通过-u参数来覆盖所指定的用户。</span><br></pre></td></tr></table></figure><h2 id="ARG"><a href="#ARG" class="headerlink" title="ARG"></a>ARG</h2><p>：用于指定传递给构建运行时的变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line">ARG &lt;name&gt;[=&lt;default value&gt;]</span><br><span class="line">示例：</span><br><span class="line">ARG site</span><br><span class="line">ARG build_user=www</span><br></pre></td></tr></table></figure><h2 id="ONBUILD"><a href="#ONBUILD" class="headerlink" title="ONBUILD"></a>ONBUILD</h2><p>：用于设置镜像触发器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line">　　ONBUILD [INSTRUCTION]</span><br><span class="line">示例：</span><br><span class="line">　　ONBUILD ADD . /app/src</span><br><span class="line">　　ONBUILD RUN /usr/local/bin/python-build --dir /app/src</span><br><span class="line">注：</span><br><span class="line">　　当所构建的镜像被用做其它镜像的基础镜像，该镜像中的触发器将会被钥触发</span><br></pre></td></tr></table></figure><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><table><thead><tr><th align="right">命令</th><th align="left">备注</th></tr></thead><tbody><tr><td align="right">FROM</td><td align="left">基础镜像</td></tr><tr><td align="right">MAINTAINER</td><td align="left">维护着信息</td></tr><tr><td align="right">RUN</td><td align="left">要执行的命令</td></tr><tr><td align="right">ADD</td><td align="left">COPY文件，会自动解压</td></tr><tr><td align="right">WORKDIR</td><td align="left">当前工作目录</td></tr><tr><td align="right">VOLUME</td><td align="left">目录挂载</td></tr><tr><td align="right">EXPOSE</td><td align="left">开放端口</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Dockfile是一种被Docker程序解释的脚本，Dockerfile由一条一条的指令组成，每条指令对应Linux下面的一条命令。
    
    </summary>
    
    
      <category term="docker" scheme="http://blog.mooom.top/categories/docker/"/>
    
    
      <category term="docker" scheme="http://blog.mooom.top/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>crontab</title>
    <link href="http://blog.mooom.top/2017/09/01/crontab/"/>
    <id>http://blog.mooom.top/2017/09/01/crontab/</id>
    <published>2017-09-01T03:31:20.000Z</published>
    <updated>2019-07-12T08:07:25.628Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>crontab命令被用来提交和管理用户的需要周期性执行的任务，与windows下的计划任务类似，当安装完成操作系统后，默认会安装此服务工具，并且会自动启动crond进程，<a id="more"></a>crond进程每分钟会定期检查是否有要执行的任务，如果有要执行的任务，则自动执行该任务。</p><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab(选项)(参数)</span><br></pre></td></tr></table></figure><h1 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-e：编辑该用户的计时器设置</span><br><span class="line">-l：列出该用户的计时器设置</span><br><span class="line">-r：删除该用户的计时器设置</span><br><span class="line">-u&lt;用户名称&gt;：指定要设定计时器的用户名称</span><br></pre></td></tr></table></figure><h1 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minute hour day month week command   顺序：分 时 日 月 周</span><br></pre></td></tr></table></figure><p>其中：<br>minute： 表示分钟，可以是从0到59之间的任何整数。<br>hour：表示小时，可以是从0到23之间的任何整数。<br>day：表示日期，可以是从1到31之间的任何整数。<br>month：表示月份，可以是从1到12之间的任何整数。<br>week：表示星期几，可以是从0到7之间的任何整数，这里的0或7代表星期日。<br>command：要执行的命令，可以是系统命令，也可以是自己编写的脚本文件。<br>在以上各个字段中，还可以使用以下特殊字符：<br>星号（*）：代表所有可能的值，例如month字段如果是星号，则表示在满足其它字段的制约条件后每月都执行该命令操作。<br>逗号（,）：可以用逗号隔开的值指定一个列表范围，例如，“1,2,5,7,8,9”<br>中杠（-）：可以用整数之间的中杠表示一个整数范围，例如“2-6”表示“2,3,4,5,6”<br>正斜线（/）：可以用正斜线指定时间的间隔频率，例如“0-23/2”表示每两小时执行一次。同时正斜线可以和星号一起使用，例如*/10，如果用在minute字段，表示每十分钟执行一次</p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>用sleep实现秒级运行（每20秒）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* * * * * sleep 20; /bin/date</span><br><span class="line">* * * * * sleep 40; /bin/date</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;crontab命令被用来提交和管理用户的需要周期性执行的任务，与windows下的计划任务类似，当安装完成操作系统后，默认会安装此服务工具，并且会自动启动crond进程，
    
    </summary>
    
    
      <category term="Linux" scheme="http://blog.mooom.top/categories/Linux/"/>
    
    
      <category term="shell" scheme="http://blog.mooom.top/tags/shell/"/>
    
      <category term="命令" scheme="http://blog.mooom.top/tags/%E5%91%BD%E4%BB%A4/"/>
    
      <category term="网络" scheme="http://blog.mooom.top/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>ssh 密钥登陆</title>
    <link href="http://blog.mooom.top/2017/08/05/sshkey/"/>
    <id>http://blog.mooom.top/2017/08/05/sshkey/</id>
    <published>2017-08-05T09:43:47.000Z</published>
    <updated>2019-07-12T08:07:25.643Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>SSH 是较可靠，专为远程登录会话和其他网络服务提供安全性的协议。利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。使用SSH密钥可以实现免密码登陆。</p><a id="more"></a><h2 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -P</span><br></pre></td></tr></table></figure><p>在~/.ssh下会生成公钥和私钥<br>authorized_keys:存放远程免密登录的公钥,主要通过这个文件记录多台机器的公钥<br>id_rsa : 生成的私钥文件<br>id_rsa.pub ： 生成的公钥文件<br>know_hosts : 已知的主机公钥清单</p><h2 id="复制公钥到主机"><a href="#复制公钥到主机" class="headerlink" title="复制公钥到主机"></a>复制公钥到主机</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub root@10.1.15.111</span><br></pre></td></tr></table></figure><p>会把id_rsa.pub中内容追加到远程主机~/.ssh/authorized_keys中</p><h2 id="验证配置-正常登陆"><a href="#验证配置-正常登陆" class="headerlink" title="验证配置,正常登陆"></a>验证配置,正常登陆</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@10.1.15.111</span><br></pre></td></tr></table></figure><h2 id="多个私钥配置"><a href="#多个私钥配置" class="headerlink" title="多个私钥配置"></a>多个私钥配置</h2><h3 id="新增配置文件并修改权限"><a href="#新增配置文件并修改权限" class="headerlink" title="新增配置文件并修改权限"></a>新增配置文件并修改权限</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch ~/.ssh/config</span><br><span class="line">chmod 600 ~/.ssh/config</span><br></pre></td></tr></table></figure><h3 id="添加配置到配置文件"><a href="#添加配置到配置文件" class="headerlink" title="添加配置到配置文件"></a>添加配置到配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Host 10.1.15.*</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa.15</span><br><span class="line">    User root</span><br><span class="line"></span><br><span class="line">Host *.abc.com  </span><br><span class="line">    IdentityFile ~/.ssh/id_rsa.abc</span><br><span class="line">    User root  </span><br><span class="line"></span><br><span class="line">Host github.com  </span><br><span class="line">    IdentityFile ~/.ssh/id_rsa.github</span><br><span class="line">    User git</span><br></pre></td></tr></table></figure><h3 id="ssh-keygen-参数"><a href="#ssh-keygen-参数" class="headerlink" title="ssh-keygen 参数"></a>ssh-keygen 参数</h3><p>ssh-keygen 用于为生成、管理和转换认证密钥，包括 RSA 和 DSA 两种密钥。<br>密钥类型可以用 -t 选项指定。如果没有指定则默认生成用于SSH-2的RSA密钥。</p><p>-a trials<br>        在使用 -T 对 DH-GEX 候选素数进行安全筛选时需要执行的基本测试数量。<br>-B      显示指定的公钥/私钥文件的 bubblebabble 摘要。<br>-b bits<br>        指定密钥长度。对于RSA密钥，最小要求768位，默认是2048位。DSA密钥必须恰好是1024位(FIPS 186-2 标准的要求)。<br>-C comment<br>        提供一个新注释<br>-c      要求修改私钥和公钥文件中的注释。本选项只支持 RSA1 密钥。<br>        程序将提示输入私钥文件名、密语(如果存在)、新注释。<br>-D reader<br>        下载存储在智能卡 reader 里的 RSA 公钥。<br>-e      读取OpenSSH的私钥或公钥文件，并以 RFC 4716 SSH 公钥文件格式在 stdout 上显示出来。<br>        该选项能够为多种商业版本的 SSH 输出密钥。<br>-F hostname<br>        在 known_hosts 文件中搜索指定的 hostname ，并列出所有的匹配项。<br>        这个选项主要用于查找散列过的主机名/ip地址，还可以和 -H 选项联用打印找到的公钥的散列值。<br>-f filename<br>        指定密钥文件名。<br>-G output_file<br>        为 DH-GEX 产生候选素数。这些素数必须在使用之前使用 -T 选项进行安全筛选。<br>-g      在使用 -r 打印指纹资源记录的时候使用通用的 DNS 格式。<br>-H      对 known_hosts 文件进行散列计算。这将把文件中的所有主机名/ip地址替换为相应的散列值。<br>        原来文件的内容将会添加一个”.old”后缀后保存。这些散列值只能被 ssh 和 sshd 使用。<br>        这个选项不会修改已经经过散列的主机名/ip地址，因此可以在部分公钥已经散列过的文件上安全使用。<br>-i      读取未加密的SSH-2兼容的私钥/公钥文件，然后在 stdout 显示OpenSSH兼容的私钥/公钥。<br>        该选项主要用于从多种商业版本的SSH中导入密钥。<br>-l      显示公钥文件的指纹数据。它也支持 RSA1 的私钥。<br>        对于RSA和DSA密钥，将会寻找对应的公钥文件，然后显示其指纹数据。<br>-M memory<br>        指定在生成 DH-GEXS 候选素数的时候最大内存用量(MB)。<br>-N new_passphrase<br>        提供一个新的密语。<br>-P passphrase<br>        提供(旧)密语。<br>-p      要求改变某私钥文件的密语而不重建私钥。程序将提示输入私钥文件名、原来的密语、以及两次输入新密语。<br>-q      安静模式。用于在 /etc/rc 中创建新密钥的时候。<br>-R hostname<br>        从 known_hosts 文件中删除所有属于 hostname 的密钥。<br>        这个选项主要用于删除经过散列的主机(参见 -H 选项)的密钥。<br>-r hostname<br>        打印名为 hostname 的公钥文件的 SSHFP 指纹资源记录。<br>-S start<br>        指定在生成 DH-GEX 候选模数时的起始点(16进制)。<br>-T output_file<br>        测试 Diffie-Hellman group exchange 候选素数(由 -G 选项生成)的安全性。<br>-t type<br>        指定要创建的密钥类型。可以使用：”rsa1”(SSH-1) “rsa”(SSH-2) “dsa”(SSH-2)<br>-U reader<br>        把现存的RSA私钥上传到智能卡 reader<br>-v      详细模式。ssh-keygen 将会输出处理过程的详细调试信息。常用于调试模数的产生过程。<br>        重复使用多个 -v 选项将会增加信息的详细程度(最大3次)。<br>-W generator<br>        指定在为 DH-GEX 测试候选模数时想要使用的 generator<br>-y      读取OpenSSH专有格式的公钥文件，并将OpenSSH公钥显示在 stdout 上。</p><p>~/.ssh/identity<br>        该用户默认的 RSA1 身份认证私钥(SSH-1)。此文件的权限应当至少限制为”600”。<br>        生成密钥的时候可以指定采用密语来加密该私钥(3DES)。</p><p>将在登录的时候读取这个文件。<br>~/.ssh/identity.pub<br>        该用户默认的 RSA1 身份认证公钥(SSH-1)。此文件无需保密。<br>        此文件的内容应该添加到所有 RSA1 目标主机的 ~/.ssh/authorized_keys 文件中。<br>~/.ssh/id_dsa<br>        该用户默认的 DSA 身份认证私钥(SSH-2)。此文件的权限应当至少限制为”600”。<br>        生成密钥的时候可以指定采用密语来加密该私钥(3DES)。</p><p>将在登录的时候读取这个文件。<br>~/.ssh/id_dsa.pub<br>        该用户默认的 DSA 身份认证公钥(SSH-2)。此文件无需保密。<br>        此文件的内容应该添加到所有 DSA 目标主机的 ~/.ssh/authorized_keys 文件中。<br>~/.ssh/id_rsa<br>        该用户默认的 RSA 身份认证私钥(SSH-2)。此文件的权限应当至少限制为”600”。<br>        生成密钥的时候可以指定采用密语来加密该私钥(3DES)。</p><p>将在登录的时候读取这个文件。<br>~/.ssh/id_rsa.pub<br>        该用户默认的 RSA 身份认证公钥(SSH-2)。此文件无需保密。<br>        此文件的内容应该添加到所有 RSA 目标主机的 ~/.ssh/authorized_keys 文件中。<br>/etc/ssh/moduli<br>        包含用于 DH-GEX 的 Diffie-Hellman groups 。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SSH 是较可靠，专为远程登录会话和其他网络服务提供安全性的协议。利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。使用SSH密钥可以实现免密码登陆。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://blog.mooom.top/categories/Linux/"/>
    
    
      <category term="命令" scheme="http://blog.mooom.top/tags/%E5%91%BD%E4%BB%A4/"/>
    
      <category term="网络" scheme="http://blog.mooom.top/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>mysql-server部署</title>
    <link href="http://blog.mooom.top/2017/08/02/mysql-zctb/"/>
    <id>http://blog.mooom.top/2017/08/02/mysql-zctb/</id>
    <published>2017-08-02T11:48:30.000Z</published>
    <updated>2019-09-06T03:26:57.545Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>MySQL 5.7是世界上最受欢迎的开源数据库的最佳版本，并提供了一个新的高级功能集，旨在帮助那些正在构建下一代基于Web和嵌入式应用程序和服务的人员。</p><a id="more"></a><h2 id="MySQL-5-7-特性"><a href="#MySQL-5-7-特性" class="headerlink" title="MySQL 5.7 特性"></a>MySQL 5.7 特性</h2><p>3倍更快的性能<br>新的优化器<br>本地JSON支持<br>多源复制<br>GIS空间扩展<br>和其他重要的增强</p><h2 id="mysql-添加apt源"><a href="#mysql-添加apt源" class="headerlink" title="mysql 添加apt源"></a>mysql 添加apt源</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://repo.mysql.com//mysql-apt-config_0.8.7-1_all.deb</span><br></pre></td></tr></table></figure><h2 id="安装apt源"><a href="#安装apt源" class="headerlink" title="安装apt源"></a>安装apt源</h2><p>选择5.7版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i mysql-apt-config_0.8.7-1_all.deb</span><br></pre></td></tr></table></figure><h2 id="更新本地源"><a href="#更新本地源" class="headerlink" title="更新本地源"></a>更新本地源</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get updagte</span><br></pre></td></tr></table></figure><h2 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install mysql-server</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MySQL 5.7是世界上最受欢迎的开源数据库的最佳版本，并提供了一个新的高级功能集，旨在帮助那些正在构建下一代基于Web和嵌入式应用程序和服务的人员。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="http://blog.mooom.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://blog.mooom.top/tags/mysql/"/>
    
      <category term="架构" scheme="http://blog.mooom.top/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>mysql-mmm参数说明</title>
    <link href="http://blog.mooom.top/2017/08/02/mysql-mmmcs/"/>
    <id>http://blog.mooom.top/2017/08/02/mysql-mmmcs/</id>
    <published>2017-08-02T10:42:08.000Z</published>
    <updated>2019-07-12T08:07:25.641Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>MySQL-mmm有关mmm_control参数测试</p><a id="more"></a><h2 id="MMM主要功能脚本介绍："><a href="#MMM主要功能脚本介绍：" class="headerlink" title="MMM主要功能脚本介绍："></a>MMM主要功能脚本介绍：</h2><h3 id="mmm-mond"><a href="#mmm-mond" class="headerlink" title="mmm_mond"></a>mmm_mond</h3><p>  监控进程，负责所有的监控工作，决定和处理所有节点角色活动。</p><h3 id="mmm-agent"><a href="#mmm-agent" class="headerlink" title="mmm_agent"></a>mmm_agent</h3><p>  运行在每个mysql服务器上的代理进程，完成监控的探针工作和执行简单的远端服务设置。</p><h3 id="mmm-control"><a href="#mmm-control" class="headerlink" title="mmm_control"></a>mmm_control</h3><p>   一个简单的脚本，提供管理mmm_mond进程的命令。</p><h2 id="MMM-MOND参数介绍"><a href="#MMM-MOND参数介绍" class="headerlink" title="MMM_MOND参数介绍"></a>MMM_MOND参数介绍</h2><h3 id="status"><a href="#status" class="headerlink" title="status"></a>status</h3><h4 id="mmm-control-show"><a href="#mmm-control-show" class="headerlink" title="mmm_control show"></a>mmm_control show</h4><p>运行mmm_control show时monitor监控的mysql服务可以有如下几种状态：<br>online  主机正在运行，没有任何问题。<br>admin_offline  手动被设置成离线状态。<br>hard_offline  主机不在线(ping检测或者是mysql检测失败)。<br>awating_recovery  主机即将恢复在线。<br>replication_delay  复制延迟很大，积压了很多未完成的日志(rep_backlog检测失败)。<br>replication_fall  复制线程没有运行(rep_threads检测失败)。</p><h4 id="mmm-common-conf"><a href="#mmm-common-conf" class="headerlink" title="mmm_common.conf"></a>mmm_common.conf</h4><p>配置文件auto_set_online参数大小设置问题：</p><p>当mmm_mon.conf文件的auto_set_online 10参数设置小于60时db1、db2mysql服务停止启动切换时，不会出现上述AWAITING_RECOVERY状态，只要mysql服务启动即会自动切换到online状态，当配置参数等于或者大于60时，即会出现如下状态，</p><p>当用mmm_control set_onlinedb1即可修改db1为在线online状态。<br>总结：只有当主机在线的时候才能获得角色(reader or writer)，当一个主机从online转换到其它状态，它所获得的角色都会从它身上移除。<br>  一个主机在replication_delay或者是replication_fall状态时，如果所有的问题都解决了，就会被再次切换到online状态，除非它的状态在抖动，不稳定。参见flapping(抖动)。<br>  一个主机在hard_offline状态，如果所有的问题都解决了，那么它会转换到awaiting_recovery状态，如果它的故障时间小于60s,并且它没有重启或者auto_set_online&gt;0,那么它将会被自动切换到online状态，除非它的状态在抖动，不稳定。参见flappping(抖动)。<br>  如过活动的master出现积压了很多未完成的复制工作或者复制失败将不被视为一个问题，所以活动的master不会被置于replication_delay或者REPLICATION_FAIL状态。<br>  在节点被转换到ONLINE状态60s内，如果出现复制失败或者出现积压了很多未完成的复制工作将会被忽略(这个时间通过master-connect-retry来控制)。<br>  如果rep_backlog和rep_threads都检测失败，将会切换到REPLICATION_FAIL状态。</p><h3 id="ROLES"><a href="#ROLES" class="headerlink" title="ROLES"></a>ROLES</h3><p> 在mmm_common.conf</p><p>exclusive roles<br>  互斥角色只有一个ip，并且同一时间只能分配给一个主机，你可以指定一个优先(preferred)主机，如果这个主机是ONLINE状态，那么角色就会被切换到这个主机。<br>balanced roles<br>  负载均衡角色可以有多个IP，这些IP被均衡的分配给多个主机，所以没有一个主机可以比其他主机多出两个角色。<br>（备忘录：可以通过给可写的active_master_role设置mode=slave把角色切换给其他master）。</p><h3 id="CHECKS"><a href="#CHECKS" class="headerlink" title="CHECKS"></a>CHECKS</h3><p> mmm_controlcheck</p><p>mmm_mond会对每个主机执行4项检查，并决定检查是否成功：<br>ping   – —-主机可以ping通。<br>mysql   – —-mysql server在线<br>rep_threads   – —-复制线程在运行<br>rep_backlog   – —-复制积压的日志很少</p><h3 id="MODES"><a href="#MODES" class="headerlink" title="MODES"></a>MODES</h3><h4 id="ACTIVE-MODE"><a href="#ACTIVE-MODE" class="headerlink" title="ACTIVE MODE"></a>ACTIVE MODE</h4><p>Monitor将会自动的把角色从失败的主机上移除，并切换到其他主机上。</p><h4 id="MANUAL-MODE"><a href="#MANUAL-MODE" class="headerlink" title="MANUAL MODE"></a>MANUAL MODE</h4><p>Moniter会自动把负载均衡的角色分配给对应主机，但是不会自动的把角色从失败的主机上移除。你可以通过move_role来手工移除。</p><h4 id="WAIT-MODE"><a href="#WAIT-MODE" class="headerlink" title="WAIT MODE"></a>WAIT MODE</h4><p>类似manual模式，但是当两个master都是online状态或者超过了wait_for_other_master的时间，将被改变为ACTIVE模式。</p><h4 id="PASSIVE-MODE"><a href="#PASSIVE-MODE" class="headerlink" title="PASSIVE MODE"></a>PASSIVE MODE</h4><p>在被动模式下，monitor不改变roles，也不更新状态文件和发送任何信息给agents。在被动模式下你可以使用set_ip来改变roles，但是这些改变在monitor切换到ACTIVE或者MANUAL模式(set_active or set_manual)前都不会生效,在启动的roles发生冲突将会进入被动模式。你可以分析问题，修复reole信息，然后切换到ACTIVE或者MANUAL模式，也可以手动进去被动模式，使用 set_passive。</p><h3 id="mmm-control有关参数解析"><a href="#mmm-control有关参数解析" class="headerlink" title="mmm_control有关参数解析"></a>mmm_control有关参数解析</h3><h4 id="help"><a href="#help" class="headerlink" title="help"></a>help</h4><p>查看有关帮助的信息help</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mmm_control help</span><br></pre></td></tr></table></figure><h4 id="ping"><a href="#ping" class="headerlink" title="ping"></a>ping</h4><p>ping monitor的进程，确定进程是否存在：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mmm_control ping</span><br></pre></td></tr></table></figure><p>如果monitor宕掉后，再ping就会报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mmm_control ping</span><br></pre></td></tr></table></figure><p>ERROR: Can’tconnect to monitor daemon!</p><h4 id="show"><a href="#show" class="headerlink" title="show"></a>show</h4><p>查看当前的集群状态：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mmm_control show</span><br></pre></td></tr></table></figure><h4 id="checks"><a href="#checks" class="headerlink" title="checks"></a>checks</h4><p> 查看指定node或者所有主机的制定状态或者所有状态。<br>mmm_control checks<br>mmm_control checks db1<br>mmm_control checks db1 rep_backlog</p><p>mmm_control checks db1 rep_backlog</p><h4 id="set-online-host"><a href="#set-online-host" class="headerlink" title="set_online host"></a>set_online host</h4><p>set_online的作用是把node的状态从AWAITING_RECOVERY或者ADMIN_OFFLINE恢复到ONLINE，如下：db2主机被重启过，查看状态：<br>当db2检查时候后，所有的角色都被移动到db1和db3、db4上，现在我们恢复db2到online状态：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mmm_control set_online db2</span><br></pre></td></tr></table></figure><p>然后查看db2的状态如下：</p><h4 id="set-offline-host"><a href="#set-offline-host" class="headerlink" title="set_offline host"></a>set_offline host</h4><p>set_offline会将一个node手动的置为ADMIN_OFFLINE状态，这个node上的所有角色将会被移除，并且停止mysql复制。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mmm_control set_offline db1</span><br></pre></td></tr></table></figure><h4 id="mode"><a href="#mode" class="headerlink" title="mode"></a>mode</h4><p>打印出当前monitor的运行模式，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mmm_control mode</span><br></pre></td></tr></table></figure><h4 id="set-active-主动模式"><a href="#set-active-主动模式" class="headerlink" title="set_active 主动模式"></a>set_active 主动模式</h4><p>切换monitor进程为ACTIVE模式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mmm_control set_active</span><br></pre></td></tr></table></figure><h4 id="set-manual-收到模式"><a href="#set-manual-收到模式" class="headerlink" title="set_manual 收到模式"></a>set_manual 收到模式</h4><p>切换monitor 进程为manual模式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mmm_control set_manual</span><br></pre></td></tr></table></figure><h4 id="set-passive-被动模式"><a href="#set-passive-被动模式" class="headerlink" title="set_passive 被动模式"></a>set_passive 被动模式</h4><p>切换monitor进程为passive模式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mmm_control set_passive</span><br></pre></td></tr></table></figure><h4 id="move-role"><a href="#move-role" class="headerlink" title="move_role"></a>move_role</h4><p>通过move可以在集群nodes之间切换独一的角色，这个命令在passive模式下不可用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mmm_control move_role writer db1</span><br></pre></td></tr></table></figure><p>修改为手动模式，或者自动模式即可使用角色切换命令：<br>例如：我们把writer角色切换到db1主机上：</p><h4 id="move-role-force-role-host"><a href="#move-role-force-role-host" class="headerlink" title="move_role   -force role host"></a>move_role   -force role host</h4><p>可以将active_master_role角色切换给一个状态为replication_fall或者replication_delay的主机上，使用这个命令一定要小心，这个命令在被动模式下无效。</p><h4 id="set-ip-ip-host"><a href="#set-ip-ip-host" class="headerlink" title="set_ip ip host"></a>set_ip ip host</h4><p>set_ip可以用来在被动模式下操作角色，改变在monitor改变为active或者manual模式后生效。</p><h3 id="mmm-control-控制monitor"><a href="#mmm-control-控制monitor" class="headerlink" title="mmm_control 控制monitor"></a>mmm_control 控制monitor</h3><h4 id="config-file"><a href="#config-file" class="headerlink" title="config file"></a>config file</h4><p>config 文件可以放在/etc; /etc/mmm; /etc/mysql-mmm这三个目录中， /etc/mysql-mmm优先级最高；<br>程序名  文件名<br>mmm_agentd    ‘mmm_agent.conf’<br>mmm_mond     ‘mmm_mon.conf’<br>mmm_control    ‘mmm_mon.conf’<br>参考下图：</p><h4 id="COMMENTS"><a href="#COMMENTS" class="headerlink" title="COMMENTS"></a>COMMENTS</h4><p>每行以#开头的行被认为是注释，并且这行会被忽略。注释不可以出现在一行注释的后面。注释前面的空格将会被忽略。</p><h3 id="This-is-acomment"><a href="#This-is-acomment" class="headerlink" title="This is acomment"></a>This is acomment</h3><p>debug 1 # this isno comment<br>7.2.2 VARIABLES<br>debug 0</p><h4 id="SPECIFYING-MULTIPLE-VALUES"><a href="#SPECIFYING-MULTIPLE-VALUES" class="headerlink" title="SPECIFYING MULTIPLE VALUES"></a>SPECIFYING MULTIPLE VALUES</h4><p>有些变量你需要指定多个值：<br>ips192.168.0.51,192.168.0.52,192.168.0.53</p><h4 id="SECTIONS"><a href="#SECTIONS" class="headerlink" title="SECTIONS"></a>SECTIONS</h4><p>配置文件分为两种类型的sestions：唯一的和命名的。<br>唯一型的sections，例如：<br><monitor><br>ip 127.0.0.1<br>&lt; /monitor&gt;<br>定义一个空的唯一型sections也是可以的：<br><socket><br>命名型的sections,例如：<br><host db1><br>ip 192.168.0.31<br>&lt; /host&gt;<br>你当然也可以定义一个空的命名型sections：<br><checkmysql><br>default sections<br>默认sections里面的值会被其他所有的sections继承。<br>定义所有的主机角色都是’slave’<br>&lt; hostdefault&gt;<br>mode slave<br>&lt; /host&gt;</checkmysql></host></socket></monitor></p><h4 id="INCLUDES"><a href="#INCLUDES" class="headerlink" title="INCLUDES"></a>INCLUDES</h4><p>可以通过include导入其他配置文件<br>include common.conf</p><h3 id="CONFIGURATION-VARIABLES"><a href="#CONFIGURATION-VARIABLES" class="headerlink" title="CONFIGURATION VARIABLES"></a>CONFIGURATION VARIABLES</h3><h4 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h4><p>this<br>描述：这个主机的名字<br>默认值：无<br>Used by：agent，tools<br>debug<br>描述：是否开启debug模式<br>可用值：true/yes/1/on flase/no/0/off<br>默认值：0<br>Used by：agent，monitor<br>active_master_role<br>描述：哪个角色名被定义为活动的master<br>默认值：无<br>Used by：agent，monitor<br>max_kill_retries<br>描述：尝试杀死进程的最大次数，用来防止在切换active_master_role时产生多余的写操作<br>默认值：10<br>Used by：agent<br>default_copy_method<br>描述：默认拷贝方法的名字<br>默认值：无<br>Used by：tools<br>clone_dirs<br>描述：保存mysql日志和数据的路径(相对逻辑卷的挂载点)<br>默认值：无<br>Used by：tools</p><h4 id="MONITORSECTION"><a href="#MONITORSECTION" class="headerlink" title="MONITORSECTION"></a>MONITORSECTION</h4><p>monitor section需要mmm_mond和mmm_control<br>IP<br>描述：mmm_mond进程监听哪个IP<br>默认值：无<br>Used by：control，monitor<br>port<br>描述：mmm_mond进程监听哪个端口<br>默认值：无<br>Used by：control，monitor<br>pid_path<br>描述：pid-file的路径<br>默认值：无<br>Used by： monitor<br>bin_path<br>描述：包含mmm二进制文件的目录<br>默认值：无<br>Used by：agent<br>status_path<br>描述：状态文件的位置<br>默认值：无<br>Used by：monitor<br>ping_interval<br>描述：网络监测的间隔时间<br>默认值：1s<br>Used by：monitor<br>ping_ips<br>描述：网络监测使用的Ips<br>默认值：<br>Used by：monitor<br>flap_duration<br>描述：抖动检测持续的时间<br>默认值：3600<br>Used by：monitor<br>flap_count<br>描述：在flap_duration时间内出现flap_count次宕机，我们就认为这个时机为抖动状态<br>默认值：3<br>Used by：monitor<br>auto_set_online<br>描述：从AWAITING_RECOVERY状态切换到ONLINE状态的时间，单位秒，0=disabled<br>默认值：0<br>Used by：monitor<br>kill_host_bin<br>描述：当一个主机不可达，并且角色不能从一个agent上删除，就需要一个二进制命令用来杀掉一个主机，这个命令需要你自己定制，第一个参数是主机，第二个参数是ping的状态(1 ok,0 not ok)<br>默认值：bin_path/monitor/kill_host<br>Used by：monitor<br>careful_startup<br>描述：小心的启动，例如当writer角色被配置在多个主机上时进入passive模式<br>Allowed values：true/yes/1/onfalse/no/0/off<br>默认值：0<br>Used by：monitor<br>mode<br>描述：monitor默认的模式<br>Allowed values：activemanual wait passive<br>默认值：active<br>Used by：monitor<br>wait_for_other_master<br>描述：从WAIT模式切换到ACTIVE模式时，等待其他master切换到ONLINE状态的时间，单位秒，0=永远等待<br>默认值：120<br>Used by：monitor</p><h4 id="HOSTSECTIONS"><a href="#HOSTSECTIONS" class="headerlink" title="HOSTSECTIONS"></a>HOSTSECTIONS</h4><p>ip<br>描述：主机的IP<br>默认值：0<br>Used by：agent，monitor，tools<br>mode<br>描述：主机的模式，只有master和slave模式<br>默认值：0<br>Used by：agent，monitor<br>peer<br>描述：对等的主机名（只有在master主机才有）<br>默认值：0<br>Used by：agent，monitor<br>pid_path<br>描述：pid_file的位置<br>默认值：0<br>Used by：agent<br>bin_path<br>描述：包含mmm工具的目录<br>默认值：0<br>Used by：agent<br>agent_port<br>描述：mmm_agent监听的端口<br>默认值：9989<br>Used by：agent<br>cluster_interface<br>描述：集群的虚拟IP配置在哪个网卡上<br>默认值：无<br>Used by：agent<br>mysql_port<br>描述：mysqld监听的端口<br>默认值：3306<br>Used by：agent，monitor，tools<br>mysql_pidfile<br>描述：mysql的pidfile位置<br>默认值：/var/run/mysqld/mysqld.pid<br>Used by：tools<br>mysql_rcscript<br>描述：mysql rc-script的位置<br>默认值：/etc/init.d/mysql<br>Used by：tools<br>mysql_cnf<br>描述：my.cnf文件的位置<br>默认值：/etc/my.cnf<br>Used by：tools<br>agent_user<br>描述：MMM agent 使用的mysql用户<br>默认值：无<br>Used by：agent<br>agent_password<br>描述：MMM agent 使用的mysql用户的密码<br>默认值：无<br>Used by：agent<br>monitor_user<br>描述：MMM monitor 使用的mysql用户<br>默认值：无<br>Used by：monitor<br>monitor_password<br>描述：MMM monitor 使用的mysql用户的密码<br>默认值：无<br>Used by：monitor<br>replication_user<br>描述：mysql复制使用的用户<br>默认值：无<br>Used by：agent，tools<br>replication_password<br>描述：mysql复制使用的用户的密码<br>默认值：无<br>Used by：agent，tools<br>ssh_user<br>描述：MMM tools 使用的SSH用户<br>默认值：无<br>Used by：tools<br>ssh_port<br>描述：MMM tools 使用的SSH端口<br>默认值：无<br>Used by：tools<br>ssh_parameters<br>描述：MMM tools 使用的SSH时的额外参数<br>默认值：无<br>Used by：tools<br>tools_user<br>描述：MMM tools 使用的mysql用户<br>默认值：无<br>Used by：tools<br>tools_password<br>描述：MMM tools 使用的mysql用户的密码<br>默认值：无<br>Used by：tools<br>backup_dir<br>描述：备份的目标目录<br>默认值：无<br>Used by：tools<br>restor_dir<br>描述：还原的源目录<br>默认值：无<br>Used by：tools<br>lvm_bin_lvcreate<br>描述：lvcreate二进制文件的路径<br>默认值：lvcreate<br>Used by：tools<br>lvm_bin_lvremove<br>描述：lvremove二进制文件的路径<br>默认值：lvremove<br>Used by：tools<br>lvm_snapshot_size<br>描述：lvm快照的大小<br>默认值：<br>Used by：tools<br>lvm_logical_volume<br>描述：mysql数据和日志所在的lvm逻辑卷的名字<br>默认值：<br>Used by：tools<br>lvm_volume_group<br>描述：mysql数据和日志所在的lvm逻辑卷组的名字<br>默认值：<br>Used by：tools<br>lvm_mount_dir<br>描述：lvm快照的挂载点<br>默认值：<br>Used by：tools<br>lvm_mount_ops<br>描述：lvm快照挂在使用的参数<br>默认值：<br>Used by：tools</p><h4 id="ROLESECTIONS"><a href="#ROLESECTIONS" class="headerlink" title="ROLESECTIONS"></a>ROLESECTIONS</h4><p>这个sections定义cluster中有哪些角色，虚拟IP与角色的对应关系。每个角色这些服务器之间切换，每个服务器需要一个IP(用于monitor和此服务器通信)，每个角色也需要一个IP。<br>mode<br>描述：角色的模式，分为balanced和exclusive两种模式。（一般writer角色是exclusive模式，reader角色是balanced模式）<br>默认值：<br>Used by：monitor<br>hosts<br>描述：哪些主机可以担任这个角色<br>默认值：<br>Used by：monitor<br>ips<br>描述：lvm快照挂在使用的参数<br>默认值：一个或者多个对应角色的虚拟IP<br>Used by：monitor<br>prefer<br>描述：那个主机对此角色具有较高优先级，只能使用在exclusive模式<br>默认值：<br>Used by：monitor</p><h4 id="CHECK-SECTIONS"><a href="#CHECK-SECTIONS" class="headerlink" title="CHECK SECTIONS"></a>CHECK SECTIONS</h4><p>check_period<br>描述：检查周期默认为5s<br>默认值：5s<br>Used by：monitor<br>trap_period<br>描述：一个节点被检测不成功的时间持续trap_period秒，就慎重的认为这个节点失败了。<br>默认值：10s<br>Used by：monitor<br>timeout<br>描述：检查超时的时间<br>默认值：2s<br>Used by：monitor<br>restart_after<br>描述：在完成restart_after次检查后，重启checker进程<br>默认值：10000<br>Used by：monitor<br>max_backlog<br>描述：记录检查rep_backlog日志的最大次数<br>默认值：60<br>Used by：monitor</p><h4 id="SOCKET-SECTION"><a href="#SOCKET-SECTION" class="headerlink" title="SOCKET SECTION"></a>SOCKET SECTION</h4><p>type<br>描述：socket的类型是普通的还是ssl<br>默认值：<br>Used by：agent，control，monitor<br>cert_file<br>描述：如果使用ssl类型的连接，指定本地证书的位置<br>默认值：<br>Used by：agent，control，monitor<br>key_file<br>描述：RSA私钥的位置(使用ssl连接时使用)<br>默认值：<br>Used by：agent，control，monitor<br>ca_file<br>描述：包含著名的证书颁发结构颁发的证书文件的位置(使用ssl连接时使用)<br>默认值：<br>Used by：agent，monitor</p><h4 id="COPY-METHOD-SECTIONS"><a href="#COPY-METHOD-SECTIONS" class="headerlink" title="COPY_METHOD SECTIONS"></a>COPY_METHOD SECTIONS</h4><p>backup_command<br>描述：用来创建备份的命令<br>默认值：<br>Used by：tools<br>restor_command<br>描述：用来还原备份的命令<br>默认值：<br>Used by：tools<br>incremental_command<br>描述：显示可用的增量备份<br>默认值：<br>Used by：tools<br>incremental<br>描述：表明增量备份是否支持copy方法<br>默认值：0<br>Used by：tools<br>single_run<br>描述：决定拷贝方法是否可以拷贝所有的目录在一个进程<br>默认值：<br>Used by：tools<br>true_copy<br>描述：决定拷贝方法是否可以创建一个1:1的拷贝<br>默认值：<br>Used by：tools</p><h3 id="LOGGING"><a href="#LOGGING" class="headerlink" title="LOGGING"></a>LOGGING</h3><h4 id="LOGGING-CONFIG-FILES"><a href="#LOGGING-CONFIG-FILES" class="headerlink" title="LOGGING CONFIG FILES"></a>LOGGING CONFIG FILES</h4><p>MMM使用Log4perl记录日志，所以日志相当灵活，如果默认的日志不是你需要的，你可以创建一个配置文件放在/etc/mmm or /etc/mysql-mmm, /etc/mysql-mmm优先级更高<br>程序对应依耐的配置文件如下：<br>程序配置文件名<br>mmm_agentd‘mmm_agent_log.conf’<br>mmm_mond‘mmm_mon_log.conf’or ‘mmm_mon_log_CLUSTER.conf’<br>mmm_control‘mmm_mon_log.conf’or ‘mmm_mon_log_CLUSTER.conf’<br>mmm_backup<br>mmm_clone<br>mmm_restore</p><h4 id="LOG4PERL-SAMPLE-CONFIGURATION"><a href="#LOG4PERL-SAMPLE-CONFIGURATION" class="headerlink" title="LOG4PERL SAMPLE CONFIGURATION"></a>LOG4PERL SAMPLE CONFIGURATION</h4><p>这里是默认的日志配置<br>log4perl.logger =INFO, LogFile<br>log4perl.appender.LogFile= Log::Log4perl::Appender::File<br>log4perl.appender.LogFile.Threshold= INFO<br>log4perl.appender.LogFile.filename= /var/log/mysql-mmm/progam.info<br>log4perl.appender.LogFile.recreate= 1<br>log4perl.appender.LogFile.layout= PatternLayout<br>log4perl.appender.LogFile.layout.ConversionPattern= %d %5p %m%n<br>如果以debug模式运行，添加如下信息:<br>log4perl.logger =DEBUG, ScreenLog, LogFile<br>log4perl.appender.ScreenLog= Log::Log4perl::Appender::Screen<br>log4perl.appender.ScreenLog.stderr= 0<br>log4perl.appender.ScreenLog.layout= PatternLayout<br>log4perl.appender.ScreenLog.layout.ConversionPattern= %d %5p %m%n<br>通常可以把日志记录到多个文件中(以不同的重要级别来分离)，或者让MMM给你发送邮件（在2.1.1版本下默认的日志配置是这样的）<br>log4perl.logger =INFO, FileInfo, FileWarn, FileError, FileFatal, MailFatal<br>log4perl.appender.FileInfo= Log::Log4perl::Appender::File<br>log4perl.appender.FileInfo.Threshold= INFO<br>log4perl.appender.FileInfo.filename= /var/log/mysql-mmm/progam.info<br>log4perl.appender.FileInfo.recreate= 1<br>log4perl.appender.FileInfo.layout= PatternLayout<br>log4perl.appender.FileInfo.layout.ConversionPattern= %d %5p %m%n<br>log4perl.appender.FileWarn= Log::Log4perl::Appender::File<br>log4perl.appender.FileWarn.Threshold= WARN<br>log4perl.appender.FileWarn.filename= /var/log/mysql-mmm/progam.warn<br>log4perl.appender.FileWarn.recreate= 1<br>log4perl.appender.FileWarn.layout= PatternLayout<br>log4perl.appender.FileWarn.layout.ConversionPattern= %d %5p %m%n<br>log4perl.appender.FileError= Log::Log4perl::Appender::File<br>log4perl.appender.FileError.Threshold= ERROR<br>log4perl.appender.FileError.filename= /var/log/mysql-mmm/progam.error<br>log4perl.appender.FileError.recreate= 1<br>log4perl.appender.FileError.layout= PatternLayout<br>log4perl.appender.FileError.layout.ConversionPattern= %d %5p %m%n<br>log4perl.appender.FileFatal= Log::Log4perl::Appender::File<br>log4perl.appender.FileFatal.Threshold= FATAL<br>log4perl.appender.FileFatal.filename= /var/log/mysql-mmm/progam.fatal<br>log4perl.appender.FileFatal.recreate= 1<br>log4perl.appender.FileFatal.layout= PatternLayout<br>log4perl.appender.FileFatal.layout.ConversionPattern= %d %5p %m%n<br>log4perl.appender.MailFatal= Log::Dispatch::Email::MailSend<br>log4perl.appender.MailFatal.Threshold= FATAL<br>log4perl.appender.MailFatal.to= root<br>log4perl.appender.MailFatal.buffered= 0<br>log4perl.appender.MailFatal.subject= FATAL error in progam<br>log4perl.appender.MailFatal.layout= PatternLayout<br>log4perl.appender.MailFatal.layout.ConversionPattern= %d %m%n</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MySQL-mmm有关mmm_control参数测试&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="http://blog.mooom.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://blog.mooom.top/tags/mysql/"/>
    
      <category term="架构" scheme="http://blog.mooom.top/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>mysql-mmm 部署指南</title>
    <link href="http://blog.mooom.top/2017/08/02/mysql-mmm/"/>
    <id>http://blog.mooom.top/2017/08/02/mysql-mmm/</id>
    <published>2017-08-02T08:32:11.000Z</published>
    <updated>2019-07-12T08:07:25.640Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>mysql-mmm多主复制管理器 是一组灵活的脚本（在任何时间只有一个节点可写）来执行监视/故障转移和MySQL主-主复制配置管理工具。<br>该工具集还能够通过任意数量的从站读取平衡标准主/从配置，因此您可以使用它来移动一组服务器上的虚拟IP地址，具体取决于它们是否在复制中。</p><a id="more"></a><h2 id="部署环境准备"><a href="#部署环境准备" class="headerlink" title="部署环境准备"></a>部署环境准备</h2><p>最基本的安装必须至少包含2个数据库服务器和一个监控服务器，这边的环境是5台主机<br>系统：ubuntu 14.04<br>MMM软件：2.2.1</p><p>|主机类型|ip地址|主机名称|服务 id | 备注<br>|:——-|:——|:——-|:——-|<br>|monitoring host|192.168.0.10|mon|-|监控<br>|master 1|192.168.0.11|      db1|1|主<br>|master 2|192.168.0.12|      db2|2|主<br>|slave  1|192.168.0.13|      db3|3|从<br>|slave  2|192.168.0.14|      db4|4|从</p><p>使用以下虚拟 IP。他们将通过MMM分布在主机上。</p><table><thead><tr><th align="left">ip地址</th><th align="left">角色</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">192.168.0.100</td><td align="left">读写</td><td align="left">连接到此IP以进行写入查询</td></tr><tr><td align="left">192.168.0.100</td><td align="left">读</td><td align="left">连接到这个IP进行读取查询</td></tr><tr><td align="left">192.168.0.100</td><td align="left">读</td><td align="left">连接到这个IP进行读取查询</td></tr><tr><td align="left">192.168.0.100</td><td align="left">读</td><td align="left">连接到这个IP进行读取查询</td></tr><tr><td align="left">192.168.0.100</td><td align="left">读</td><td align="left">连接到这个IP进行读取查询</td></tr><tr><td align="left">## Mysql 数据库配置</td><td align="left"></td><td align="left"></td></tr><tr><td align="left">db1 db2 双主相互同步     db3 db4 做db1的从库</td><td align="left"></td><td align="left"></td></tr><tr><td align="left">### 设置主从同步</td><td align="left"></td><td align="left"></td></tr><tr><td align="left">#### 锁表禁止写入</td><td align="left"></td><td align="left"></td></tr><tr><td align="left"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; FLUSH TABLES WITH READ LOCK;</span><br></pre></td></tr></table></figure></td><td align="left"></td><td align="left"></td></tr></tbody></table><h4 id="显示db1的MASTER地址"><a href="#显示db1的MASTER地址" class="headerlink" title="显示db1的MASTER地址"></a>显示db1的MASTER地址</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SHOW MASTER STATUS;</span><br></pre></td></tr></table></figure><table><thead><tr><th>File</th><th>Position</th><th>Binlog_Do_DB</th><th>Binlog_Ignore_DB</th></tr></thead><tbody><tr><td>mysql-bin.000001</td><td>107</td><td></td><td></td></tr><tr><td>1 row in set (0.00 sec)</td><td></td><td></td><td></td></tr></tbody></table><h4 id="备份所有数据库-新的终端打开"><a href="#备份所有数据库-新的终端打开" class="headerlink" title="备份所有数据库(新的终端打开)"></a>备份所有数据库(新的终端打开)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -p --all-databases &gt; /tmp/database-backup.sql</span><br></pre></td></tr></table></figure><h4 id="对数据库解除锁定"><a href="#对数据库解除锁定" class="headerlink" title="对数据库解除锁定"></a>对数据库解除锁定</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; UNLOCK TABLES;</span><br></pre></td></tr></table></figure><h4 id="数据库同步到其他"><a href="#数据库同步到其他" class="headerlink" title="数据库同步到其他"></a>数据库同步到其他</h4><p>复制刚才的数据库备份到db2, db3 and db4：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db1$ scp /tmp/database-backup.sql @192.168.0.12:/tmp</span><br><span class="line">db1$ scp /tmp/database-backup.sql @192.168.0.13:/tmp</span><br><span class="line">db1$ scp /tmp/database-backup.sql @192.168.0.14:/tmp</span><br></pre></td></tr></table></figure><p>然后将备份导入到db2, db3 and db4：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db2$ mysql -u root -p &lt; /tmp/database-backup.sql</span><br><span class="line">db3$ mysql -u root -p &lt; /tmp/database-backup.sql</span><br><span class="line">db4$ mysql -u root -p &lt; /tmp/database-backup.sql</span><br></pre></td></tr></table></figure><p>然后刷新db2, db3 and db4的权限，我们更改了user表，所以mysql要重新读取这个表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(db2) mysql&gt; FLUSH PRIVILEGES;</span><br><span class="line">(db3) mysql&gt; FLUSH PRIVILEGES;</span><br><span class="line">(db4) mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><h4 id="设置同步"><a href="#设置同步" class="headerlink" title="设置同步"></a>设置同步</h4><p>通过下面的命令设置在db2, db3和db4上的复制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(db2) mysql&gt; CHANGE MASTER TO master_host=&apos;192.168.0.11&apos;, master_port=3306, master_user=&apos;replication&apos;,</span><br><span class="line">              master_password=&apos;replication_password&apos;, master_log_file=&apos;mysql-bin.000001&apos;, master_log_pos=107;</span><br><span class="line">(db3) mysql&gt; CHANGE MASTER TO master_host=&apos;192.168.0.11&apos;, master_port=3306, master_user=&apos;replication&apos;,</span><br><span class="line">              master_password=&apos;replication_password&apos;, master_log_file=&apos;mysql-bin.000001&apos;, master_log_pos=107;</span><br><span class="line">(db4) mysql&gt; CHANGE MASTER TO master_host=&apos;192.168.0.11&apos;, master_port=3306, master_user=&apos;replication&apos;,</span><br><span class="line">              master_password=&apos;replication_password&apos;, master_log_file=&apos;mysql-bin.000001&apos;, master_log_pos=107;</span><br></pre></td></tr></table></figure><h4 id="启动从库slave同步"><a href="#启动从库slave同步" class="headerlink" title="启动从库slave同步"></a>启动从库slave同步</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(db2) mysql&gt; START SLAVE;</span><br><span class="line">(db3) mysql&gt; START SLAVE;</span><br><span class="line">(db4) mysql&gt; START SLAVE;</span><br></pre></td></tr></table></figure><h4 id="检查同步情况"><a href="#检查同步情况" class="headerlink" title="检查同步情况"></a>检查同步情况</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">(db2) mysql&gt; SHOW SLAVE STATUS\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">                Slave_IO_State: Waiting for master to send event</span><br><span class="line">                Master_Host: 192.168.0.11</span><br><span class="line">                Master_User: replication</span><br><span class="line">                Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">…</span><br><span class="line">(db3) mysql&gt; SHOW SLAVE STATUS\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">                Slave_IO_State: Waiting for master to send event</span><br><span class="line">                Master_Host: 192.168.0.11</span><br><span class="line">                Master_User: replication</span><br><span class="line">                Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">…</span><br><span class="line">(db4) mysql&gt; SHOW SLAVE STATUS\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">                Slave_IO_State: Waiting for master to send event</span><br><span class="line">                Master_Host: 192.168.0.11</span><br><span class="line">                Master_User: replication</span><br><span class="line">                Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br></pre></td></tr></table></figure><h3 id="设置主主同步"><a href="#设置主主同步" class="headerlink" title="设置主主同步"></a>设置主主同步</h3><p>db1到db2的同步</p><h4 id="查询db2的MASTER状态"><a href="#查询db2的MASTER状态" class="headerlink" title="查询db2的MASTER状态"></a>查询db2的MASTER状态</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SHOW MASTER STATUS;</span><br></pre></td></tr></table></figure><table><thead><tr><th>File</th><th>Position</th><th>Binlog_Do_DB</th><th>Binlog_Ignore_DB</th></tr></thead><tbody><tr><td>mysql-bin.000001</td><td>107</td><td></td><td></td></tr><tr><td>1 row in set (0.00 sec)</td><td></td><td></td><td></td></tr></tbody></table><h4 id="配置db1到db2的同步"><a href="#配置db1到db2的同步" class="headerlink" title="配置db1到db2的同步"></a>配置db1到db2的同步</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(db1) mysql&gt; CHANGE MASTER TO master_host = &apos;192.168.0.12&apos;,master_port=3306,</span><br><span class="line">master_user=&apos;replication&apos;,master_password=&apos;replication_password&apos;,</span><br><span class="line">master_log_file=&apos;mysql-bin.000001&apos;,master_log_pos=107;</span><br></pre></td></tr></table></figure><h4 id="启动db1的slave进程"><a href="#启动db1的slave进程" class="headerlink" title="启动db1的slave进程"></a>启动db1的slave进程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(db1) mysql&gt; START SLAVE;</span><br></pre></td></tr></table></figure><h4 id="确认db1的同步状态"><a href="#确认db1的同步状态" class="headerlink" title="确认db1的同步状态"></a>确认db1的同步状态</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(db1) mysql&gt; SHOW SLAVE STATUS\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">                Slave_IO_State: Waiting for master to send event</span><br><span class="line">                Master_Host: 192.168.0.12</span><br><span class="line">                Master_User:</span><br><span class="line">                Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br></pre></td></tr></table></figure><p>所有同步状态确认ok，<br>在db1上写入数据会同步到 db2 db3 db4<br>在db2上写入数据会同步到 db1 db3 db4</p><h2 id="创建MMM管理用户"><a href="#创建MMM管理用户" class="headerlink" title="创建MMM管理用户"></a>创建MMM管理用户</h2><p>现在我们来创建需要的用户，我们需要创建3个不同的用户</p><table><thead><tr><th align="left">功能</th><th align="left">描述</th><th align="left">权限</th></tr></thead><tbody><tr><td align="left">monitor user</td><td align="left">mmm监控用于对mysql服务器进程健康检查</td><td align="left">REPLICATION CLIENT</td></tr><tr><td align="left">agent user</td><td align="left">mmm代理用来更改只读模式，复制的主服务器等等</td><td align="left">SUPER, REPLICATION CLIENT, PROCESS</td></tr><tr><td align="left">relication user</td><td align="left">用于复制</td><td align="left">REPLICATION SLAVE</td></tr><tr><td align="left">创建用户语句的代码如下：</td><td align="left"></td><td align="left"></td></tr><tr><td align="left"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GRANT REPLICATION CLIENT                 ON *.* TO &apos;mmm_monitor&apos;@&apos;192.168.0.%&apos; IDENTIFIED BY &apos;monitor_password&apos;;</span><br><span class="line">GRANT SUPER, REPLICATION CLIENT, PROCESS ON *.* TO &apos;mmm_agent&apos;@&apos;192.168.0.%&apos;   IDENTIFIED BY &apos;agent_password&apos;;</span><br><span class="line">GRANT REPLICATION SLAVE                  ON *.* TO &apos;replication&apos;@&apos;192.168.0.%&apos; IDENTIFIED BY &apos;replication_password&apos;;</span><br></pre></td></tr></table></figure></td><td align="left"></td><td align="left"></td></tr></tbody></table><p>注意：就以上这些允许用户连接的主机而言我们可以设置更多的限制，比如mmm监控主机是从192.168.0.10连接的，mmm代理和复制是从192.168.0.11 - 192.168.0.14连接的，</p><h2 id="MMM安装部署"><a href="#MMM安装部署" class="headerlink" title="MMM安装部署"></a>MMM安装部署</h2><h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><p>可选的：创建MMM脚本和配置文件的所有者，这将能为安全地管理监控脚本提供更简单的方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd --comment &quot;MMM Script owner&quot; --shell /sbin/nologin mmmd</span><br></pre></td></tr></table></figure><h3 id="监控主机配置"><a href="#监控主机配置" class="headerlink" title="监控主机配置"></a>监控主机配置</h3><h4 id="安装依存包"><a href="#安装依存包" class="headerlink" title="安装依存包"></a>安装依存包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aptitude install liblog-log4perl-perl libmailtools-perl liblog-dispatch-perl libclass-singleton-perl libproc-daemon-perl libalgorithm-diff-perl libdbi-perl libdbd-mysql-perl</span><br></pre></td></tr></table></figure><h4 id="安装MMM软件包"><a href="#安装MMM软件包" class="headerlink" title="安装MMM软件包"></a>安装MMM软件包</h4><p><a href="http://mysql-mmm.org/downloads" target="_blank" rel="noopener">MMM下载地址</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i mysql-mmm-common_*.deb mysql-mmm-monitor*.deb</span><br></pre></td></tr></table></figure><h3 id="数据库主机配置"><a href="#数据库主机配置" class="headerlink" title="数据库主机配置"></a>数据库主机配置</h3><h4 id="安装依存包-1"><a href="#安装依存包-1" class="headerlink" title="安装依存包"></a>安装依存包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aptitude install liblog-log4perl-perl libmailtools-perl liblog-dispatch-perl iproute libnet-arp-perl libproc-daemon-perl libalgorithm-diff-perl libdbi-perl libdbd-mysql-perl</span><br></pre></td></tr></table></figure><h4 id="安装MMM软件包-1"><a href="#安装MMM软件包-1" class="headerlink" title="安装MMM软件包"></a>安装MMM软件包</h4><p><a href="http://mysql-mmm.org/downloads" target="_blank" rel="noopener">MMM下载地址</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i mysql-mmm-common_*.deb mysql-mmm-agent_*.deb</span><br></pre></td></tr></table></figure><h3 id="MMM文件配置"><a href="#MMM文件配置" class="headerlink" title="MMM文件配置"></a>MMM文件配置</h3><h4 id="通讯文件"><a href="#通讯文件" class="headerlink" title="通讯文件"></a>通讯文件</h4><p>mmm_common.conf<br>/etc/mysql-mmm/的文件权限要修改成640<br>编辑/etc/mysql-mmm/mmm_common.conf(所有主机的该文件都一样)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">active_master_role          writer</span><br><span class="line">    cluster_interface       eth0</span><br><span class="line">    pid_path                /var/run/mmmd_agent.pid</span><br><span class="line">    bin_path                /usr/lib/mysql-mmm/</span><br><span class="line"></span><br><span class="line">    replication_user        replication</span><br><span class="line">    replication_password    replication_password</span><br><span class="line"></span><br><span class="line">    agent_user              mmm_agent</span><br><span class="line">    agent_password          agent_password</span><br><span class="line"></span><br><span class="line">    ip                      192.168.0.11</span><br><span class="line">    mode                    master</span><br><span class="line">    peer                    db2</span><br><span class="line"></span><br><span class="line">    ip                      192.168.0.12</span><br><span class="line">    mode                    master</span><br><span class="line">    peer                    db1</span><br><span class="line"></span><br><span class="line">    ip                      192.168.0.13</span><br><span class="line">    mode                    slave</span><br><span class="line"></span><br><span class="line">    ip                      192.168.0.14</span><br><span class="line">    mode                    slave</span><br><span class="line"></span><br><span class="line">    hosts                   db1, db2</span><br><span class="line">    ips                     192.168.0.100</span><br><span class="line">    mode                    exclusive</span><br><span class="line"></span><br><span class="line">    hosts                   db1, db2, db3, db4</span><br><span class="line">    ips                     192.168.0.101, 192.168.0.102, 192.168.0.103, 192.168.0.104</span><br><span class="line">    mode                    balanced</span><br></pre></td></tr></table></figure><p>拷贝 mmm_common.conf 到所有主机的/etc/mysql-mmm/ 目录下（5台主机都要拷贝）</p><h4 id="客户端文件"><a href="#客户端文件" class="headerlink" title="客户端文件"></a>客户端文件</h4><p>mmm_agent.conf<br>在数据库主机上我们需要编辑/etc/mysql-mmm/mmm_agent.conf文件，根据其他主机的不同更改db1的值（db2就将db1更改成db2）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">include mmm_common.conf</span><br><span class="line">this db1</span><br></pre></td></tr></table></figure><h3 id="监控文件"><a href="#监控文件" class="headerlink" title="监控文件"></a>监控文件</h3><p>mmm_mon.conf<br>在监控主机上我们需要编辑/etc/mysql-mmm/mmm_mon.conf文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">include mmm_common.conf</span><br><span class="line"></span><br><span class="line">    ip                      127.0.0.1</span><br><span class="line">    pid_path                /var/run/mmmd_mon.pid</span><br><span class="line">    bin_path                /usr/lib/mysql-mmm/</span><br><span class="line">    status_path             /var/lib/misc/mmmd_mon.status</span><br><span class="line">    ping_ips                192.168.0.11, 192.168.0.12, 192.168.0.13, 192.168.0.14</span><br><span class="line"></span><br><span class="line">    monitor_user            mmm_monitor</span><br><span class="line">    monitor_password        monitor_password</span><br><span class="line"></span><br><span class="line">debug 0</span><br></pre></td></tr></table></figure><p>ping_ips选项是通过ping这些ip来确认监控机的网络连接是正常的，dubug修改为1 可以开启dubug模式，重启可见。</p><h2 id="启动MMM客户端"><a href="#启动MMM客户端" class="headerlink" title="启动MMM客户端"></a>启动MMM客户端</h2><h3 id="配置系统代理"><a href="#配置系统代理" class="headerlink" title="配置系统代理"></a>配置系统代理</h3><p>（在数据库服务器上）编辑/etc/default/mysql-mmm-agent来开启代理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ENABLED=1</span><br></pre></td></tr></table></figure><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/mysql-mmm-agent start</span><br></pre></td></tr></table></figure><h2 id="启动MMM监控端"><a href="#启动MMM监控端" class="headerlink" title="启动MMM监控端"></a>启动MMM监控端</h2><h3 id="配置系统代理-1"><a href="#配置系统代理-1" class="headerlink" title="配置系统代理"></a>配置系统代理</h3><p>（在监控服务器上）编辑/etc/default/mysql-mmm-monitor文件来开启监控</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ENABLED=1</span><br></pre></td></tr></table></figure><h3 id="修改bug"><a href="#修改bug" class="headerlink" title="修改bug"></a>修改bug</h3><p>编辑 /usr/share/perl5/MMM/Monitor/Agent.pm 在41行处插入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if (! defined($old_state)) &#123; $old_state = &apos;certinally not new_state&apos;; &#125;</span><br></pre></td></tr></table></figure><h3 id="启动服务-1"><a href="#启动服务-1" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/mysql-mmm-monitor start</span><br></pre></td></tr></table></figure><p>等待几秒钟mmmd_mon启动，在几秒钟后你可以用mmm_control来检查群集的状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># mmm_control show</span><br><span class="line">db1(192.168.0.11) master/AWAITING_RECOVERY. Roles:</span><br><span class="line">db2(192.168.0.12) master/AWAITING_RECOVERY. Roles:</span><br><span class="line">db3(192.168.0.13) slave/AWAITING_RECOVERY. Roles:</span><br><span class="line">db4(192.168.0.14) slave/AWAITING_RECOVERY. Roles:</span><br></pre></td></tr></table></figure><p>设置主机状态为在线状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mmm_control set_online db1</span><br><span class="line">mmm_control set_online db2</span><br><span class="line">mmm_control set_online db3</span><br><span class="line">mmm_control set_online db4</span><br><span class="line"></span><br><span class="line">OK: State of &apos;db1&apos; changed to ONLINE. Now you can wait some time and check its new roles!</span><br><span class="line">OK: State of &apos;db2&apos; changed to ONLINE. Now you can wait some time and check its new roles!</span><br><span class="line">OK: State of &apos;db3&apos; changed to ONLINE. Now you can wait some time and check its new roles!</span><br><span class="line">OK: State of &apos;db4&apos; changed to ONLINE. Now you can wait some time and check its new roles!</span><br></pre></td></tr></table></figure><h2 id="其他错误问题修改"><a href="#其他错误问题修改" class="headerlink" title="其他错误问题修改"></a>其他错误问题修改</h2><h3 id="line-42错误"><a href="#line-42错误" class="headerlink" title="line 42错误"></a>line 42错误</h3><p>Use of uninitialized value $old_state in string ne at /usr/share/perl5/MMM/Monitor/Agent.pm line 42.<br>解决方法：<br>编辑 /usr/share/perl5/MMM/Monitor/Agent.pm 在41行处插入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if (! defined($old_state)) &#123; $old_state = &apos;certinally not new_state&apos;; &#125;</span><br></pre></td></tr></table></figure><h3 id="line-132错误"><a href="#line-132错误" class="headerlink" title="line 132错误"></a>line 132错误</h3><p>Starting MMM Agent Daemon: Configuration file /etc/mysql-mmm/mmm_agent.conf is world readable! at /usr/lib/perl5/vendor_perl/5.8.8/MMM/Common/Config.pm line 132<br>解决方法：<br>修改mysql-mmm目录的权限为640</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 640 /etc/mysql-mmm/*</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mysql-mmm多主复制管理器 是一组灵活的脚本（在任何时间只有一个节点可写）来执行监视/故障转移和MySQL主-主复制配置管理工具。&lt;br&gt;该工具集还能够通过任意数量的从站读取平衡标准主/从配置，因此您可以使用它来移动一组服务器上的虚拟IP地址，具体取决于它们是否在复制中。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="http://blog.mooom.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://blog.mooom.top/tags/mysql/"/>
    
      <category term="架构" scheme="http://blog.mooom.top/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>mongodb 部署</title>
    <link href="http://blog.mooom.top/2017/08/02/mongodb/"/>
    <id>http://blog.mooom.top/2017/08/02/mongodb/</id>
    <published>2017-08-02T08:31:59.000Z</published>
    <updated>2019-07-12T08:07:25.639Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>MongoDB是一个开源文档数据库，可提供高性能，高可用性和自动缩放。</p><a id="more"></a><h2 id="MongoDB社区版简介"><a href="#MongoDB社区版简介" class="headerlink" title="MongoDB社区版简介"></a>MongoDB社区版简介</h2><p>MongoDB中的一个记录是一个文档，它是一个由字段和值对组成的数据结构。MongoDB文档类似于JSON对象。字段的值可能包括其他文档，数组和文档数组。</p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>高性能<br>丰富查询语言<br>高可用性<br>水平可扩展性<br>支持多种存储引擎</p><h3 id="包内容"><a href="#包内容" class="headerlink" title="包内容"></a>包内容</h3><p>MongoDB在自己的存储库中提供正式支持的软件包。此存储库包含以下软件包：</p><table><thead><tr><th align="left">包名称</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">mongodb-org</td><td align="left">将自动安装以下列出的四个组件包</td></tr><tr><td align="left">mongodb-org-server</td><td align="left">包含mongod守护程序和关联的配置和init脚本。</td></tr><tr><td align="left">mongodb-org-mongos</td><td align="left">包含mongos守护进程。</td></tr><tr><td align="left">mongodb-org-shell</td><td align="left">包含mongoshell。</td></tr><tr><td align="left">mongodb-org-tools</td><td align="left">包含以下的MongoDB工具 mongoimport bsondump, mongodump, mongoexport, mongofiles, mongooplog, mongoperf, mongorestore, mongostat, and mongotop</td></tr></tbody></table><h2 id="安装MongoDB社区版"><a href="#安装MongoDB社区版" class="headerlink" title="安装MongoDB社区版"></a>安装MongoDB社区版</h2><h3 id="Redhat"><a href="#Redhat" class="headerlink" title="Redhat"></a>Redhat</h3><h4 id="配置YUM源"><a href="#配置YUM源" class="headerlink" title="配置YUM源"></a>配置YUM源</h4><p>创建一个/etc/yum.repos.d/mongodb-org-3.4.repo文件，使您可以直接安装MongoDB yum。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[mongodb-org-3.4]</span><br><span class="line">name = MongoDB Repository</span><br><span class="line">baseurl = https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.4/x86_64/</span><br><span class="line">gpgcheck = 1</span><br><span class="line">enabled = 1</span><br><span class="line">gpgkey = https：// www.mongodb.org/static/pgp/server-3.4.asc</span><br></pre></td></tr></table></figure><h4 id="安装MongoDB包"><a href="#安装MongoDB包" class="headerlink" title="安装MongoDB包"></a>安装MongoDB包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y mongodb-org</span><br></pre></td></tr></table></figure><h3 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h3><h4 id="导入包APT管理的公钥"><a href="#导入包APT管理的公钥" class="headerlink" title="导入包APT管理的公钥"></a>导入包APT管理的公钥</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A14518585931BC711F9BA15703C6</span><br></pre></td></tr></table></figure><h4 id="为MongoDB创建一个安装源文件"><a href="#为MongoDB创建一个安装源文件" class="headerlink" title="为MongoDB创建一个安装源文件"></a>为MongoDB创建一个安装源文件</h4><p>/etc/apt/sources.list.d/mongodb-org-3.4.list使用适合您的Ubuntu版本的命令创建列表文件：<br>Ubuntu 12.04</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;deb [ arch=amd64 ] http://repo.mongodb.org/apt/ubuntu precise/mongodb-org/3.4 multiverse&quot; | sudo tee /etc/apt/sources.list.d/mongodb-org-3.4.list</span><br></pre></td></tr></table></figure><p>Ubuntu 14.04</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;deb [ arch=amd64 ] http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.4 multiverse&quot; | sudo tee /etc/apt/sources.list.d/mongodb-org-3.4.list</span><br></pre></td></tr></table></figure><p>Ubuntu 16.04</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;deb [ arch=amd64,arm64 ] http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.4 multiverse&quot; | sudo tee /etc/apt/sources.list.d/mongodb-org-3.4.list</span><br></pre></td></tr></table></figure><h4 id="重新加载本地数据源。"><a href="#重新加载本地数据源。" class="headerlink" title="重新加载本地数据源。"></a>重新加载本地数据源。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h4 id="安装MongoDB包-1"><a href="#安装MongoDB包-1" class="headerlink" title="安装MongoDB包"></a>安装MongoDB包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y mongodb-org</span><br></pre></td></tr></table></figure><h2 id="运行MongoDB社区版"><a href="#运行MongoDB社区版" class="headerlink" title="运行MongoDB社区版"></a>运行MongoDB社区版</h2><h3 id="启动MongoDB"><a href="#启动MongoDB" class="headerlink" title="启动MongoDB"></a>启动MongoDB</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mongod start</span><br></pre></td></tr></table></figure><h3 id="验证MongoDB是否成功启动"><a href="#验证MongoDB是否成功启动" class="headerlink" title="验证MongoDB是否成功启动"></a>验证MongoDB是否成功启动</h3><p>mongod通过检查日志文件的内容进行/var/log/mongodb/mongod.log 读取，验证进程是否成功启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[initandlisten] waiting for connections on port &lt;port&gt;</span><br></pre></td></tr></table></figure><p>其中<port>被配置为在该端口/etc/mongod.conf，27017默认端口</port></p><h3 id="停止MongoDB"><a href="#停止MongoDB" class="headerlink" title="停止MongoDB"></a>停止MongoDB</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mongod stop</span><br></pre></td></tr></table></figure><h3 id="重新启动MongoDB"><a href="#重新启动MongoDB" class="headerlink" title="重新启动MongoDB"></a>重新启动MongoDB</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service mongod restart</span><br></pre></td></tr></table></figure><h3 id="开始使用MongoDB"><a href="#开始使用MongoDB" class="headerlink" title="开始使用MongoDB"></a>开始使用MongoDB</h3><h2 id="卸载MongoDB社区版"><a href="#卸载MongoDB社区版" class="headerlink" title="卸载MongoDB社区版"></a>卸载MongoDB社区版</h2><p>###停止MongoDB</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service mongod stop</span><br></pre></td></tr></table></figure><h3 id="删除软件包"><a href="#删除软件包" class="headerlink" title="删除软件包"></a>删除软件包</h3><h4 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get purge mongodb-org *</span><br></pre></td></tr></table></figure><h4 id="redhat"><a href="#redhat" class="headerlink" title="redhat"></a>redhat</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum erase $(rpm -qa | grep mongodb-org)</span><br></pre></td></tr></table></figure><h3 id="删除数据目录"><a href="#删除数据目录" class="headerlink" title="删除数据目录"></a>删除数据目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -r / var / log / mongodb</span><br><span class="line">sudo rm -r / var / lib / mongodb</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MongoDB是一个开源文档数据库，可提供高性能，高可用性和自动缩放。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="http://blog.mooom.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mongodb" scheme="http://blog.mooom.top/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>hexo插入音频</title>
    <link href="http://blog.mooom.top/2017/08/01/music/"/>
    <id>http://blog.mooom.top/2017/08/01/music/</id>
    <published>2017-08-01T07:42:35.000Z</published>
    <updated>2019-09-05T11:42:11.178Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>hexo中插入音频需要用到aplayer 和 dplayer 两个插件实现。</p><a id="more"></a><p>插件项目地址<br><a href="https://github.com/grzhan/hexo-tag-aplayer#upstream-issue" target="_blank" rel="noopener">hexo-tag-aplayer</a><br><a href="https://github.com/NextMoe/hexo-tag-dplayer" target="_blank" rel="noopener">hexo-tag-dplayer</a></p><h2 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-aplayer</span><br><span class="line">npm install hexo-tag-dplayer</span><br></pre></td></tr></table></figure><h2 id="插入音乐"><a href="#插入音乐" class="headerlink" title="插入音乐"></a>插入音乐</h2><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125;</span><br></pre></td></tr></table></figure><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title ：音乐标题</span><br><span class="line">author：音乐作者</span><br><span class="line">url：音乐文件网址</span><br><span class="line">picture_url：可选，音乐图片网址</span><br><span class="line">narrow：可选，窄款式</span><br><span class="line">autoplay：可选，自动播放音乐，不支持移动浏览器</span><br><span class="line">width:xxx：可选，前缀width:，播放器宽度（默认值：100％）</span><br><span class="line">lrc:xxx：可选，前缀lrc:，LRC文件url</span><br></pre></td></tr></table></figure><h3 id="单个播放示例"><a href="#单个播放示例" class="headerlink" title="单个播放示例"></a>单个播放示例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer &quot;Caffeine&quot; &quot;Jeff Williams&quot; &quot;caffeine.mp3&quot; &quot;picture.jpg&quot; &quot;lrc:caffeine.txt&quot; %&#125;</span><br></pre></td></tr></table></figure>        <div id="aplayer-VsJynrla" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-VsJynrla"),            narrow: false,            autoplay: false,            showlrc: 3,            music: {              title: "Paranoid",              author: "Black Sabbath",              url: "http://blog.mooom.top/video/Paranoid.mp3",              pic: "http://p3.music.126.net/FYW8etVyFbfH8utWYk-KcA==/708085488295457.jpg?param=130y130",              lrc: "http://blog.mooom.top/video/Paranoid.lrc"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><h3 id="列表播放示例"><a href="#列表播放示例" class="headerlink" title="列表播放示例"></a>列表播放示例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayerlist %&#125;</span><br><span class="line">&#123;</span><br><span class="line">&quot;narrow&quot;: false,</span><br><span class="line">    &quot;autoplay&quot;: true,</span><br><span class="line">    &quot;mode&quot;: &quot;random&quot;,</span><br><span class="line">    &quot;showlrc&quot;: 1,</span><br><span class="line">    &quot;mutex&quot;: true,</span><br><span class="line">    &quot;theme&quot;: &quot;#e6d0b2&quot;,</span><br><span class="line">&quot;preload&quot;: &quot;metadata&quot;,</span><br><span class="line">&quot;listmaxheight&quot;: &quot;513px&quot;,</span><br><span class="line">    &quot;music&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;title&quot;: &quot;CoCo&quot;,</span><br><span class="line">            &quot;author&quot;: &quot;Jeff Williams&quot;,</span><br><span class="line">            &quot;url&quot;: &quot;caffeine.mp3&quot;,</span><br><span class="line">            &quot;pic&quot;: &quot;caffeine.jpeg&quot;,</span><br><span class="line">            &quot;lrc&quot;: &quot;caffeine.txt&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;title&quot;: &quot;アイロニ&quot;,</span><br><span class="line">            &quot;author&quot;: &quot;鹿乃&quot;,</span><br><span class="line">            &quot;url&quot;: &quot;irony.mp3&quot;,</span><br><span class="line">            &quot;pic&quot;: &quot;irony.jpg&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">&#123;% endaplayerlist %&#125;</span><br></pre></td></tr></table></figure>        <div id="aplayer-FJguBjKl" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = {"narrow":false,"autoplay":false,"showlrc":1,"mode":"random","mutex":true,"theme":"#e6d0b2","preload":"metadata","listmaxheight":"513px","music":[{"title":"平凡之路","author":"朴树","url":"http://blog.mooom.top/video/%E5%B9%B3%E5%87%A1%E4%B9%8B%E8%B7%AF.mp3","pic":"http://p4.music.126.net/W_5XiCv3rGS1-J7EXpHSCQ==/18885211718782327.jpg?param=130y130","lrc":"[ti:平凡之路]\n[ar:朴树]\n[al:后会无期主题歌]\n[00:00.31]后会无期主题歌\n[00:02.41]朴树 - 平凡之路\n[00:03.76]作词：韩寒 朴树 \n[00:05.67]作曲：朴树 编曲：朴树\n[00:12.12]徘徊着的  在路上的  \n[00:17.47]你要走吗\n[00:23.30]易碎的  骄傲着  \n[00:28.85]那也曾是我的模样\n[00:34.65]沸腾着的  不安着的  \n[00:40.36]你要去哪\n[00:46.10]谜一样的  沉默着的  \n[00:51.85]故事你真的在听吗\n[00:56.35]我曾经跨过山和大海  \n[00:59.65]也穿过人山人海\n[01:02.80]我曾经拥有着一切     \n[01:05.10]转眼都飘散如烟\n[01:07.85]我曾经失落失望失掉所有方向\n[01:13.56]直到看见平凡才是唯一的答案\n[01:31.80]当你仍然  \n[01:33.20]还在幻想  \n[01:37.50]你的明天\n[01:43.10]她会好吗  还是更烂  \n[01:49.88]对我而言是另一天\n[01:53.43]我曾经毁了我的一切  \n[01:56.64]只想永远地离开\n[01:59.92]我曾经堕入无边黑暗   \n[02:02.24]想挣扎无法自拔\n[02:04.89]我曾经象你象他象那野草野花\n[02:10.64]绝望着 渴望着 \n[02:13.64]也哭也笑平凡着\n[03:03.48]向前走 就这么走   \n[03:06.33]就算你被给过什么\n[03:09.18]向前走 就这么走   \n[03:11.93]就算你被夺走什么                                        \n[03:14.88]向前走 就这么走   \n[03:17.68]就算你会错过什么\n[03:20.43]向前走 就这么走   \n[03:23.23]就算你会\n[03:25.88]我曾经跨过山和大海  \n[03:28.24]也穿过人山人海\n[03:30.54]我曾经拥有着一切     \n[03:33.79]转眼都飘散如烟\n[03:36.34]我曾经失落失望失掉所有方向\n[03:42.14]直到看见平凡才是唯一的答案\n[03:47.79]我曾经毁了我的一切  \n[03:50.94]只想永远地离开\n[03:53.49]我曾经堕入无边黑暗   \n[03:56.39]想挣扎无法自拔\n[03:59.14]我曾经象你象他象那野草野花\n[04:04.89]绝望着 渴望着 也哭也笑平凡着\n[04:10.74]我曾经跨过山和大海  \n[04:13.64]也穿过人山人海\n[04:16.24]我曾经问遍整个世界  \n[04:19.59]从来没得到答案\n[04:22.98]我不过象你象他象那野草野花\n[04:27.74]冥冥中这是我 唯一要走的路啊\n[04:34.75]时间无言  \n[04:36.25]如此这般\n[04:40.40]明天已在眼前\n[04:46.55]风吹过的  路依然远\n[04:51.65]你的故事讲到了哪\n"},{"title":"十年","author":"陈奕迅","url":"http://blog.mooom.top/video/%E5%8D%81%E5%B9%B4.mp3","pic":"http://p1.music.126.net/WJgLE2ImnLgqPPLQSlF7iQ==/114349209289440.jpg?param=130y130"},{"title":"匆匆那年","author":"王菲","url":"http://blog.mooom.top/video/匆匆那年.m4a","pic":"http://p1.music.126.net/yXyeAl-7m0tqfx4AX7BDSQ==/2542070884980240.jpg?param=130y130"}]};  options.element = document.getElementById("aplayer-FJguBjKl");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script><h2 id="插入视频"><a href="#插入视频" class="headerlink" title="插入视频"></a>插入视频</h2><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;%</span><br><span class="line">dplayer &quot;url=http://blog.mooom.top/fuckyou.mp4&quot;</span><br><span class="line">&quot;api=http://dplayer.daoapp.io&quot;</span><br><span class="line">&quot;pic=http://p1.music.126.net/8qHI7sEEk3eM2DLitQXFDQ==/765260092953631.jpg?param=130y130&quot;</span><br><span class="line">&quot;id=9E2E3368B56CDBB4&quot;</span><br><span class="line">&quot;loop=yes&quot;</span><br><span class="line">&quot;theme=#FADFA3&quot;</span><br><span class="line">&quot;autoplay=false&quot;</span><br><span class="line">&quot;token=tokendemo&quot;</span><br><span class="line"> %&#125;</span><br></pre></td></tr></table></figure><div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"theme":"#FADFA3","loop":true,"video":{"url":"http://blog.mooom.top/video/F You.mp4","pic":"http://p1.music.126.net/8qHI7sEEk3eM2DLitQXFDQ==/765260092953631.jpg?param=130y130"},"danmaku":{"id":"9E2E3368B56CDBB4","api":"http://dplayer.daoapp.io","token":"tokendemo"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hexo中插入音频需要用到aplayer 和 dplayer 两个插件实现。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://blog.mooom.top/categories/Hexo/"/>
    
    
      <category term="插件" scheme="http://blog.mooom.top/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Excel 随机字符数</title>
    <link href="http://blog.mooom.top/2017/07/31/excelsjs/"/>
    <id>http://blog.mooom.top/2017/07/31/excelsjs/</id>
    <published>2017-07-31T07:04:32.000Z</published>
    <updated>2019-07-12T08:07:25.637Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Excle随机字符数生成，用于密码生成等操作。<a id="more"></a></p><p>函数：MID<br>功能：从一个文本字符串的指定位置开始，截取指定数目的字符。<br>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MID(text,start_num,num_chars)</span><br></pre></td></tr></table></figure><p>函数：INT<br>功能：将数字向下舍入到最接近的整数。<br>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INT(number)</span><br></pre></td></tr></table></figure><p>Number  需要进行向下舍入取整的实数。</p><p>函数：RAND<br>功能：返回大于或等于 0 且小于 1 的平均分布的随机数字。每次重新计算包含此函数的单元时，返回的数字都会更改。<br>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RANK(number,ref,order)</span><br></pre></td></tr></table></figure><p>Number 为需要找到排位的数字。<br>Ref 为数字列表数组或对数字列表的引用。Ref 中的非数值型参数将被忽略。<br>Order 为一数字，指明排位的方式。</p><h4 id="随机生成数字"><a href="#随机生成数字" class="headerlink" title="随机生成数字"></a>随机生成数字</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=MID(&quot;0123456789&quot;,INT(RAND()*10)+1,1)</span><br></pre></td></tr></table></figure><h4 id="随机生成小写字母"><a href="#随机生成小写字母" class="headerlink" title="随机生成小写字母"></a>随机生成小写字母</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=MID(&quot;abcdefghijklmnopqrstuvwsyz&quot;,INT(RAND()*26)+1,1)</span><br></pre></td></tr></table></figure><h4 id="随机生成大写字母"><a href="#随机生成大写字母" class="headerlink" title="随机生成大写字母"></a>随机生成大写字母</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=MID(&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;,INT(RAND()*26)+1,1)</span><br></pre></td></tr></table></figure><h4 id="随机生成大小写字母"><a href="#随机生成大小写字母" class="headerlink" title="随机生成大小写字母"></a>随机生成大小写字母</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=MID(&quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwsyz&quot;,INT(RAND()*62)+1,1)</span><br></pre></td></tr></table></figure><h4 id="生成6位字符的随机字符"><a href="#生成6位字符的随机字符" class="headerlink" title="生成6位字符的随机字符"></a>生成6位字符的随机字符</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=MID(&quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwsyz&quot;,INT(RAND()*62)+1,1)&amp;=MID(&quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwsyz&quot;,INT(RAND()*62)+1,1)&amp;=MID(&quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwsyz&quot;,INT(RAND()*62)+1,1)&amp;=MID(&quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwsyz&quot;,INT(RAND()*62)+1,1)&amp;=MID(&quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwsyz&quot;,INT(RAND()*62)+1,1)&amp;=MID(&quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwsyz&quot;,INT(RAND()*62)+1,1)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Excle随机字符数生成，用于密码生成等操作。
    
    </summary>
    
    
      <category term="Windows" scheme="http://blog.mooom.top/categories/Windows/"/>
    
    
      <category term="excel" scheme="http://blog.mooom.top/tags/excel/"/>
    
      <category term="offices" scheme="http://blog.mooom.top/tags/offices/"/>
    
  </entry>
  
</feed>
